import React, { useState, useEffect } from "react";
import PropTypes from "prop-types";
import { connect } from "react-redux";
import { setProje } from "../../redux/actions/projeActions";
import { getKategori } from "../../redux/actions/kategoriActions";
import { getAltKategoriWithKategori } from "../../redux/actions/altKategoriActions";
import { useHistory } from "react-router-dom";
import Lightbox from "react-image-lightbox";
import "react-image-lightbox/style.css";
const ProjeEkle = ({
  getKategori,
  kategori: { kategoriler },
  getAltKategoriWithKategori,
  altKategori: { altKategorilerWithKategori, loading },
  setProje,
}) => {
  const [kategoriIndex, setKategoriIndex] = useState(0);
  const [secilenKategoriIndex, setSecilenKategoriIndex] = useState(0);
  const [secilenAltKategoriIndex, setAltSecilenKategoriIndex] = useState(0);
  const [formData, setFormData] = useState({
    projeAdi: "",
    adres: "",
    metreKare: "",
    kategori: "",
    altKategori: "",
    aciklama: "",
  });
  const [selectedFiles, setSelectedFiles] = useState([]);
  const imageIndex = [];
  const [copyImage, setCopyImage] = useState([]);
  const [resim, setResim] = useState([]);
  const [isOpen, setIsOpen] = useState(false);
  const [photoIndex, setPhotoIndex] = useState(0);

  let history = useHistory();
  const {
    projeAdi,
    adres,
    metreKare,
    kategori,
    altKategori,
    aciklama,
  } = formData;
  useEffect(() => {
    getKategori();
  }, [kategoriler, altKategorilerWithKategori]);
  const onChangeResim = (e) => {
    if (selectedFiles.length > 0) {
      e.target.files = null;
      setSelectedFiles([]);
    }
    setResim(e.target.files);
    if (e.target.files) {
      const filesArray = Array.from(e.target.files).map((file) =>
        URL.createObjectURL(file)
      );

      setSelectedFiles((prevImages) => prevImages.concat(filesArray));
      Array.from(e.target.files).map(
        (file) => URL.revokeObjectURL(file) // avoid memory leak
      );

      if (copyImage.length === 0) {
        setCopyImage(filesArray);
      }
      console.log("=============asd=======================");
      console.log(copyImage);
      console.log("====================================");
    }
  };
  const onChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  const renderPhotos = (source) => {
    return source.map((photo, index) => {
      return (
        <div>
          <img
            onClick={() => setIsOpen(true)}
            className="img-preview"
            src={photo}
            alt=""
            key={photo}
          />
          <button
            type="button"
            onClick={() => {
              source.splice(index, 1);
              console.log(copyImage);
            }}
          >
            Sil
          </button>
        </div>
      );
    });
  };
  const onSubmit = async (e) => {
    e.preventDefault();
    if (copyImage.length > 0) {
      copyImage.map((img, index) => {
        selectedFiles.map((img1) => {
          if (img === img1) {
            imageIndex.push(index);
          }
        });
      });
    }
    let form_data = new FormData();
    form_data.append("projeAdi", projeAdi);
    form_data.append("adres", adres);
    form_data.append("metreKare", metreKare);
    form_data.append("kategori", kategori);
    form_data.append("altKategori", altKategori);
    form_data.append("aciklama", aciklama);

    imageIndex.map((img) => {
      form_data.append("resim", resim[img]);
    });

    if (secilenKategoriIndex === 0) {
      return;
    }

    setProje(form_data);
    history.push("/");
  };
  return (
    <>
      <div className="page-wrapper">
        <div className="page-wrapper-row full-height">
          <div className="page-wrapper-middle">
            <div className="page-container">
              <div className="page-content-wrapper">
                <div className="page-content">
                  <div className="container">
                    <ul className="page-breadcrumb breadcrumb">
                      <li>
                        <a href="index.html">Anasayfa</a>
                        <i className="fa fa-circle" />
                      </li>

                      <li>
                        <span>Proje Ekle</span>
                      </li>
                    </ul>
                    <div className="page-content-inner">
                      <div className="row">
                        <div className="col-md-12">
                          <div
                            className="portlet light portlet-fit portlet-form "
                            id="form_wizard_1"
                          >
                            <div className="portlet-body">
                              {/* BEGIN FORM*/}
                              <form
                                onSubmit={(e) => onSubmit(e)}
                                className="form-horizontal"
                              >
                                <div className="form-body">
                                  <h3 className="form-section">Proje Ekle</h3>
                                  <div className="form-group ">
                                    <label
                                      className="control-label col-md-3"
                                      htmlFor="inputSuccess"
                                    >
                                      Proje AdÄ±
                                    </label>
                                    <div className="col-md-4">
                                      <input
                                        required
                                        type="text"
                                        className="form-control"
                                        id="inputSuccess"
                                        name="projeAdi"
                                        onChange={(e) => onChange(e)}
                                        value={projeAdi}
                                      />{" "}
                                    </div>
                                  </div>
                                  <div className="form-group ">
                                    <label
                                      className="control-label col-md-3"
                                      htmlFor="inputSuccess"
                                    >
                                      Adres
                                    </label>
                                    <div className="col-md-4">
                                      <input
                                        required
                                        type="text"
                                        className="form-control"
                                        id="inputSuccess"
                                        name="adres"
                                        onChange={(e) => onChange(e)}
                                        value={adres}
                                      />{" "}
                                    </div>
                                  </div>
                                  <div className="form-group ">
                                    <label
                                      className="control-label col-md-3"
                                      htmlFor="inputSuccess"
                                    >
                                      Metre Kare
                                    </label>
                                    <div className="col-md-4">
                                      <input
                                        required
                                        type="text"
                                        className="form-control"
                                        id="inputSuccess"
                                        name="metreKare"
                                        onChange={(e) => onChange(e)}
                                        value={metreKare}
                                      />{" "}
                                    </div>
                                  </div>
                                  <div className="form-group ">
                                    <label
                                      className="control-label col-md-3"
                                      htmlFor="inputSuccess"
                                    >
                                      Aciklama
                                    </label>
                                    <div className="col-md-4">
                                      <input
                                        required
                                        type="text"
                                        className="form-control"
                                        id="inputSuccess"
                                        name="aciklama"
                                        onChange={(e) => onChange(e)}
                                        value={aciklama}
                                      />{" "}
                                    </div>
                                  </div>
                                  <div class="form-group">
                                    <label class="control-label col-md-3">
                                      Kategori
                                    </label>
                                    <div class="col-md-4">
                                      <select
                                        name="kategori"
                                        onChange={async (e) => {
                                          if (e.target.selectedIndex === 0) {
                                            setKategoriIndex(0);
                                          } else {
                                            setKategoriIndex(1);
                                          }
                                          setSecilenKategoriIndex(
                                            e.target.selectedIndex
                                          );
                                          getAltKategoriWithKategori(
                                            e.target.value
                                          );
                                          onChange(e);
                                          loading = false;
                                        }}
                                        required={
                                          secilenKategoriIndex === 0
                                            ? true
                                            : false
                                        }
                                        class="form-control"
                                      >
                                        <option value="">
                                          Kategori SeÃ§iniz
                                        </option>
                                        {kategoriler.map((kategori, index) =>
                                          kategori.aktifMi ? (
                                            <option
                                              key={index}
                                              value={kategori._id}
                                            >
                                              {kategori.kategoriAdi}
                                            </option>
                                          ) : (
                                            ""
                                          )
                                        )}
                                      </select>
                                    </div>
                                  </div>
                                  {altKategorilerWithKategori.length === 0 ||
                                  loading ||
                                  kategoriIndex === 0 ? (
                                    ""
                                  ) : (
                                    <div class="form-group">
                                      <label class="control-label col-md-3">
                                        Alt Kategori
                                      </label>
                                      <div class="col-md-4">
                                        <select
                                          required={
                                            secilenAltKategoriIndex === 0
                                              ? true
                                              : false
                                          }
                                          class="form-control"
                                          name="altKategori"
                                          onChange={(e) => {
                                            setAltSecilenKategoriIndex(
                                              e.target.selectedIndex
                                            );
                                            onChange(e);
                                          }}
                                        >
                                          <option value="">
                                            Alt Kategori SeÃ§iniz
                                          </option>

                                          {altKategorilerWithKategori &&
                                            altKategorilerWithKategori.map(
                                              (altKategori1, index) =>
                                                altKategori1.aktifMi ? (
                                                  <option
                                                    key={index}
                                                    value={altKategori1._id}
                                                  >
                                                    {
                                                      altKategori1.altKategoriAdi
                                                    }
                                                  </option>
                                                ) : (
                                                  ""
                                                )
                                            )}
                                        </select>
                                      </div>
                                    </div>
                                  )}
                                  <div className="form-group">
                                    <label className="control-label col-md-3">
                                      Resim
                                    </label>
                                    <div className="col-md-3">
                                      <div
                                        className="fileinput fileinput-new"
                                        data-provides="fileinput"
                                      >
                                        <div className="input-group input-large">
                                          {/*  <div
                                            className="form-control uneditable-input input-fixed input-medium"
                                            data-trigger="fileinput"
                                          >
                                            <i className="fa fa-file fileinput-exists" />
                                            &nbsp;
                                            <span className="fileinput-filename">
                                              {" "}
                                            </span>
                                          </div> */}
                                          <span className="input-group-addon btn default btn-file">
                                            <input
                                              onChange={(e) => {
                                                onChangeResim(e);
                                              }}
                                              type="file"
                                              multiple
                                              name="resim"
                                            />{" "}
                                          </span>
                                        </div>
                                        <div>{renderPhotos(selectedFiles)}</div>
                                        {isOpen && (
                                          <Lightbox
                                            mainSrc={selectedFiles[photoIndex]}
                                            nextSrc={
                                              selectedFiles[
                                                (photoIndex + 1) %
                                                  selectedFiles.length
                                              ]
                                            }
                                            prevSrc={
                                              selectedFiles[
                                                (photoIndex +
                                                  selectedFiles.length -
                                                  1) %
                                                  selectedFiles.length
                                              ]
                                            }
                                            onCloseRequest={() =>
                                              setIsOpen(false)
                                            }
                                            onMovePrevRequest={() => {
                                              console.log(photoIndex);
                                              setPhotoIndex(
                                                (photoIndex +
                                                  selectedFiles.length -
                                                  1) %
                                                  selectedFiles.length
                                              );
                                            }}
                                            onMoveNextRequest={() =>
                                              setPhotoIndex(
                                                (photoIndex + 1) %
                                                  selectedFiles.length
                                              )
                                            }
                                          />
                                        )}
                                      </div>
                                    </div>
                                  </div>{" "}
                                </div>
                                <div className="form-actions">
                                  <div className="row">
                                    <div className="col-md-offset-3 col-md-9">
                                      <button
                                        type="submit"
                                        className="btn green"
                                      >
                                        Kaydet
                                      </button>
                                      <button
                                        type="button"
                                        className="btn default"
                                      >
                                        Ä°ptal
                                      </button>
                                    </div>
                                  </div>
                                </div>
                              </form>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
{/* 
              <a href="javascript:;" className="page-quick-sidebar-toggler">
                <i className="icon-login" />
              </a>
              <div
                className="page-quick-sidebar-wrapper"
                data-close-on-body-click="false"
              ></div> */}
            </div>
          </div>
        </div>
      </div>
    </>
  );
};
ProjeEkle.propTypes = {
  setProje: PropTypes.func.isRequired,
  getAltKategoriWithKategori: PropTypes.func.isRequired,
  getKategori: PropTypes.func.isRequired,
};
const mapStateToProps = (state) => ({
  kategori: state.kategori,
  altKategori: state.altKategori,
});
export default connect(mapStateToProps, {
  setProje,
  getKategori,
  getAltKategoriWithKategori,
})(ProjeEkle);
