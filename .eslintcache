[{"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\index.js":"1","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\App.js":"2","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\store.js":"3","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\PrivateRoute.js":"4","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\NotFound.js":"5","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Navbar.js":"6","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\AltKategoriler\\AltKategoriList.js":"7","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Footer.js":"8","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\AltKategoriler\\AltKategoriEkle.js":"9","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Kategoriler\\KategoriGuncelle.js":"10","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Kategoriler\\KategoriEkle.js":"11","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\AltKategoriler\\AltKategoriGuncelle.js":"12","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Kategoriler\\KategoriList.js":"13","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Login\\Login.js":"14","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Projeler\\ProjeList.js":"15","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Projeler\\ProjeGuncelle.js":"16","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\utils\\setAuthToken.js":"17","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Projeler\\ProjeEkle.js":"18","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Referanslar\\ReferansList.js":"19","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Referanslar\\ReferansEkle.js":"20","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\actions\\authActions.js":"21","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Referanslar\\ReferansGuncelle.js":"22","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\actions\\Types.js":"23","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Slaytlar\\SlaytList.js":"24","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Slaytlar\\SlaytEkle.js":"25","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\reducers\\index.js":"26","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Spinner.js":"27","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\actions\\subCategoryActions.js":"28","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\actions\\categoryActions.js":"29","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\actions\\slideActions.js":"30","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\actions\\referenceActions.js":"31","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\actions\\projectActions.js":"32","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\reducers\\authReducer.js":"33","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\reducers\\altKategoriReducers.js":"34","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\reducers\\kategoriReducer.js":"35","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\reducers\\slaytReducer.js":"36","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\reducers\\projeReducer.js":"37","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\reducers\\referansReducer.js":"38","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Slaytlar\\SlaytGuncelle.js":"39"},{"size":353,"mtime":1613501414894,"results":"40","hashOfConfig":"41"},{"size":4135,"mtime":1614105580856,"results":"42","hashOfConfig":"41"},{"size":872,"mtime":1610301828000,"results":"43","hashOfConfig":"41"},{"size":742,"mtime":1610303742000,"results":"44","hashOfConfig":"41"},{"size":345,"mtime":1610375200000,"results":"45","hashOfConfig":"41"},{"size":4257,"mtime":1614117611442,"results":"46","hashOfConfig":"41"},{"size":3081,"mtime":1614127377098,"results":"47","hashOfConfig":"41"},{"size":2282,"mtime":1614105539763,"results":"48","hashOfConfig":"41"},{"size":7944,"mtime":1613821461224,"results":"49","hashOfConfig":"41"},{"size":5606,"mtime":1613830567578,"results":"50","hashOfConfig":"41"},{"size":5740,"mtime":1613821466788,"results":"51","hashOfConfig":"41"},{"size":8338,"mtime":1613830616039,"results":"52","hashOfConfig":"41"},{"size":2970,"mtime":1614127710526,"results":"53","hashOfConfig":"41"},{"size":3719,"mtime":1614340856846,"results":"54","hashOfConfig":"41"},{"size":3671,"mtime":1614170275475,"results":"55","hashOfConfig":"41"},{"size":29306,"mtime":1614177229362,"results":"56","hashOfConfig":"41"},{"size":346,"mtime":1613502575098,"results":"57","hashOfConfig":"41"},{"size":24304,"mtime":1614171330455,"results":"58","hashOfConfig":"41"},{"size":4288,"mtime":1614127710527,"results":"59","hashOfConfig":"41"},{"size":10538,"mtime":1614127710526,"results":"60","hashOfConfig":"41"},{"size":1078,"mtime":1614127793024,"results":"61","hashOfConfig":"41"},{"size":10497,"mtime":1614127710526,"results":"62","hashOfConfig":"41"},{"size":2593,"mtime":1613489245829,"results":"63","hashOfConfig":"41"},{"size":3968,"mtime":1614127710527,"results":"64","hashOfConfig":"41"},{"size":10460,"mtime":1614127710526,"results":"65","hashOfConfig":"41"},{"size":441,"mtime":1610125506000,"results":"66","hashOfConfig":"41"},{"size":330,"mtime":1614127383232,"results":"67","hashOfConfig":"41"},{"size":2199,"mtime":1614127729559,"results":"68","hashOfConfig":"41"},{"size":2026,"mtime":1614127710527,"results":"69","hashOfConfig":"41"},{"size":1585,"mtime":1614127840021,"results":"70","hashOfConfig":"41"},{"size":1681,"mtime":1614127710527,"results":"71","hashOfConfig":"41"},{"size":1616,"mtime":1614177431198,"results":"72","hashOfConfig":"41"},{"size":1467,"mtime":1613496673175,"results":"73","hashOfConfig":"41"},{"size":1077,"mtime":1613496641292,"results":"74","hashOfConfig":"41"},{"size":1235,"mtime":1613496655320,"results":"75","hashOfConfig":"41"},{"size":1261,"mtime":1613496611668,"results":"76","hashOfConfig":"41"},{"size":918,"mtime":1613496662529,"results":"77","hashOfConfig":"41"},{"size":1213,"mtime":1613827047379,"results":"78","hashOfConfig":"41"},{"size":9853,"mtime":1614127710527,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"zwdrg8",{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"82"},"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\index.js",[],["175","176"],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\App.js",["177","178","179"],"import { Fragment, useEffect } from \"react\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport AltKategoriEkle from \"./components/AltKategoriler/AltKategoriEkle\";\nimport AltKategoriGuncelle from \"./components/AltKategoriler/AltKategoriGuncelle\";\nimport AltKategoriList from \"./components/AltKategoriler/AltKategoriList\";\nimport Footer from \"./components/Footer\";\nimport KategoriEkle from \"./components/Kategoriler/KategoriEkle\";\nimport KategoriGuncelle from \"./components/Kategoriler/KategoriGuncelle\";\nimport KategoriList from \"./components/Kategoriler/KategoriList\";\nimport Login from \"./components/Login/Login\";\nimport Navbar from \"./components/Navbar\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport ProjeEkle from \"./components/Projeler/ProjeEkle\";\nimport ProjeGuncelle from \"./components/Projeler/ProjeGuncelle\";\nimport ProjeList from \"./components/Projeler/ProjeList\";\nimport ReferansEkle from \"./components/Referanslar/ReferansEkle\";\nimport ReferansGuncelle from \"./components/Referanslar/ReferansGuncelle\";\nimport ReferansList from \"./components/Referanslar/ReferansList\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { connect } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { loadUser } from \"./redux/actions/authActions\";\nimport { LOGOUT } from \"./redux/actions/Types\";\nimport SlaytList from \"./components/Slaytlar/SlaytList\";\nimport SlaytEkle from \"./components/Slaytlar/SlaytEkle\";\nimport NotFound from \"./components/NotFound\";\nimport SlaytGuncelle from \"./components/Slaytlar/SlaytGuncelle\";\nconst App = ({ isAuthenticated }) => {\n  useEffect(() => {\n    /*     setAuthToken(\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJrdWxsYW5pY2kiOnsiaWQiOiI1ZDM5NzJhZjA2MjlmMjNmNGM1ZTM1OTAifSwiaWF0IjoxNTk1MTgyNDA0LCJleHAiOjE1OTUyMTg0MDR9.F3gzbzOeIJuBGT7ncSfJj0vtWISOldb8xTDd6Dsp4mc\"\n    ); */\n    // check for token in LS\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    store.dispatch(loadUser());\n\n    // log user out from all tabs if they log out in one tab\n    window.addEventListener(\"storage\", () => {\n      if (!localStorage.token) store.dispatch({ type: LOGOUT });\n    });\n    if (isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    } else {\n      return <Redirect to=\"/login\" />;\n    }\n  }, []);\n  return (\n    <Router>\n      <Fragment\n        \n      >\n        <Switch>\n          <Route exact path=\"/login\" component={LoginContainer} />\n          <Route path=\"/\" component={DefaultContainer} />\n        </Switch>\n      </Fragment>\n    </Router>\n  );\n};\nconst LoginContainer = () => (\n  <>\n    <Route exact path=\"/login\" render={() => <Redirect to=\"/login\" />} />\n    <Route path=\"/login\" component={Login} />\n  </>\n);\n\nconst DefaultContainer = () => (\n  <div>\n    <Navbar />\n    <PrivateRoute exact path=\"/\" component={ProjeList} />\n    <PrivateRoute exact path=\"/Kategoriler\" component={KategoriList} />\n    <PrivateRoute exact path=\"/KategoriEkle\" component={KategoriEkle} />\n    <PrivateRoute exact path=\"/AltKategoriler\" component={AltKategoriList} />\n    <PrivateRoute exact path=\"/AltKategoriEkle\" component={AltKategoriEkle} />\n    <PrivateRoute exact path=\"/ReferansEkle\" component={ReferansEkle} />\n    <PrivateRoute exact path=\"/Referanslar\" component={ReferansList} />\n    <PrivateRoute exact path=\"/ProjeEkle\" component={ProjeEkle} />\n    <PrivateRoute exact path=\"/KategoriGuncelle\" component={KategoriGuncelle} />\n    <PrivateRoute exact path=\"/Slaytlar\" component={SlaytList} />\n    <PrivateRoute exact path=\"/SlaytGuncelle\" component={SlaytGuncelle} />\n    <PrivateRoute exact path=\"/SlaytEkle\" component={SlaytEkle} />\n    <PrivateRoute\n      exact\n      path=\"/AltKategoriGuncelle\"\n      component={AltKategoriGuncelle}\n    />\n    <PrivateRoute exact path=\"/ReferansGuncelle\" component={ReferansGuncelle} />\n    <PrivateRoute exact path=\"/ProjeGuncelle\" component={ProjeGuncelle} />\n   {/*  <Footer /> */}\n  </div>\n);\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(App);\n","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\store.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\PrivateRoute.js",["180"],"import React, { useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      loading ? (\r\n        <Spinner />\r\n      ) : isAuthenticated ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\NotFound.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Navbar.js",["181","182","183","184","185","186","187","188"],"import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../redux/actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport  logo  from '../logo.png'\r\nconst Navbar = ({ logout }) => {\r\n  const onSubmit = () => {\r\n    logout();\r\n    <Redirect to=\"/login\" />;\r\n  };\r\n  //../assets/layouts/layout3/img/logo-default.jpg\r\n  return (\r\n    <div className=\"page-wrapper-row\">\r\n      <div className=\"page-wrapper-top\">\r\n        <div className=\"page-header\">\r\n          <div className=\"page-header-top\">\r\n            <div className=\"container\">\r\n              <div className=\"page-logo\">\r\n              <Link to=\"/\" style={{ color: \"white\" }}>\r\n                  <img\r\n                    src={logo}\r\n                    alt=\"logo\"\r\n                    className=\"logo-default\"\r\n                  />\r\n                </Link>\r\n              </div>\r\n              <a href=\"javascript:;\" className=\"menu-toggler\" />\r\n              <div className=\"top-menu\">\r\n                <ul className=\"nav navbar-nav pull-right\">\r\n                  <li className=\"dropdown dropdown-extended quick-sidebar-toggler\">\r\n                    <span className=\"sr-only\">Menu</span>\r\n                    <i onClick={onSubmit} className=\"icon-logout\" />\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header-menu\">\r\n            <div className=\"container\">\r\n              {/* BEGIN HEADER SEARCH BOX */}\r\n\r\n              {/* END HEADER SEARCH BOX */}\r\n              {/* BEGIN MEGA MENU */}\r\n              {/* DOC: Apply \"hor-menu-light\" class after the \"hor-menu\" class below to have a horizontal menu with white background */}\r\n              {/* DOC: Remove data-hover=\"dropdown\" and data-close-others=\"true\" attributes below to disable the dropdown opening on mouse hover */}\r\n              <div className=\"hor-menu  \">\r\n                <ul className=\"nav navbar-nav\">\r\n                  <li\r\n                    aria-haspopup=\"true\"\r\n                    className=\"menu-dropdown classic-menu-dropdown \"\r\n                  >\r\n                    <Link to=\"/\">\r\n                      {\" \"}\r\n                      Projeler\r\n                      <span className=\"arrow\" />\r\n                    </Link>\r\n                  </li>\r\n                  <li\r\n                    aria-haspopup=\"true\"\r\n                    className=\"menu-dropdown mega-menu-dropdown  \"\r\n                  >\r\n                    <Link to=\"/Kategoriler\">\r\n                      {\" \"}\r\n                      Kategoriler\r\n                      <span className=\"arrow\" />\r\n                    </Link>\r\n                  </li>\r\n                  <li\r\n                    aria-haspopup=\"true\"\r\n                    className=\"menu-dropdown classic-menu-dropdown \"\r\n                  >\r\n                    <Link to=\"/AltKategoriler\">\r\n                      {\" \"}\r\n                      Alt Kategoriler\r\n                      <span className=\"arrow\" />\r\n                    </Link>\r\n                  </li>\r\n                  <li\r\n                    aria-haspopup=\"true\"\r\n                    className=\"menu-dropdown mega-menu-dropdown  mega-menu-full\"\r\n                  >\r\n                    <Link to=\"/Referanslar\">                    \r\n                      Referanslar\r\n                      <span className=\"arrow\" />\r\n                    </Link>\r\n                  </li>\r\n                  <li\r\n                    aria-haspopup=\"true\"\r\n                    className=\"menu-dropdown mega-menu-dropdown  mega-menu-full\"\r\n                  >\r\n                    <Link to=\"/Slaytlar\">\r\n                      {\" \"}\r\n                      Slaytlar\r\n                      <span className=\"arrow\" />\r\n                    </Link>\r\n                  </li>\r\n                </ul>{\" \"}\r\n              </div>\r\n              {/* END MEGA MENU */}\r\n            </div>\r\n          </div>\r\n          {/* END HEADER MENU */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\AltKategoriler\\AltKategoriList.js",["189"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  deleteSubCategory,\r\n  getSubCategory,\r\n} from \"../../redux/actions/subCategoryActions\";\r\nimport Spinner from \"../Spinner\";\r\nconst AltKategoriList = ({\r\n  getSubCategory,\r\n  deleteSubCategory,\r\n  altKategori: { altKategoriler, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getSubCategory();\r\n  }, [altKategoriler]);\r\n  const onclickFunc = (aktifMi, id) => {\r\n    deleteSubCategory({ aktifMi, id });\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"portlet box green\">\r\n        <div className=\"portlet-title\">\r\n          <div className=\"caption\">Alt Kategoriler </div>\r\n          <div class=\"tools\">\r\n            <Link to=\"/AltKategoriEkle\" style={{ color: \"white\" }}>\r\n              Alt Kategori Ekle\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"portlet-body flip-scroll\">\r\n          <table className=\"table table-bordered table-striped table-condensed flip-content\">\r\n            <thead className=\"flip-content\">\r\n              <tr>\r\n                <th width=\"20%\"> Alt Kategori Adı </th>\r\n                <th width=\"20%\"> Kategori Adı </th>\r\n                <th> Düzenle </th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {loading ? (\r\n                <Spinner  />\r\n              ) : (\r\n                altKategoriler.map((altkategori) =>\r\n                  altkategori.aktifMi && altkategori.kategori.aktifMi ? (\r\n                    <tr key={altkategori._id}>\r\n                      <td> {altkategori.altKategoriAdi} </td>\r\n                      <td> {altkategori.kategori.kategoriAdi} </td>\r\n                      <td>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={(e) => {\r\n                            onclickFunc(false, altkategori._id);\r\n                          }}\r\n                          className=\"btn green\"\r\n                        >\r\n                          Sil\r\n                        </button>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/AltKategoriGuncelle\",\r\n                            state: altkategori,\r\n                          }}\r\n                          className=\"btn green\"\r\n                        >\r\n                          Güncelle\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nAltKategoriList.propTypes = {\r\n  getSubCategory: PropTypes.func.isRequired,\r\n\r\n  deleteSubCategory: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  altKategori: state.altKategori,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  getSubCategory,\r\n\r\n  deleteSubCategory,\r\n})(AltKategoriList);\r\n","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Footer.js",["190","191"],"import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"fixed\",\r\n        height: \"22%\",\r\n        bottom: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <div className=\"page-wrapper-row\">\r\n        <div className=\"page-wrapper-bottom\">\r\n          {/* BEGIN FOOTER */}\r\n          {/* BEGIN PRE-FOOTER */}\r\n          <div className=\"page-prefooter\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3 col-sm-6 col-xs-12 footer-block\">\r\n                  <h2>About</h2>\r\n                  <p>\r\n                    {\" \"}\r\n                    Lorem ipsum dolor sit amet, consectetuer adipiscing elit,\r\n                    sed diam dolore.{\" \"}\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-3 col-sm-6 col-xs-12 footer-block\">\r\n                  <h2>Contacts</h2>\r\n                  <address className=\"margin-bottom-40\">\r\n                    {\" \"}\r\n                    Phone: 800 123 3456\r\n                    <br /> Email:\r\n                    <a href=\"mailto:info@metronic.com\">info@metronic.com</a>\r\n                  </address>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* END PRE-FOOTER */}\r\n          {/* BEGIN INNER FOOTER */}\r\n          <div className=\"page-footer\">\r\n            <div className=\"container\">\r\n              {\" \"}\r\n              2016 © Metronic Theme By\r\n              <a target=\"_blank\" href=\"http://keenthemes.com\">\r\n                Keenthemes\r\n              </a>{\" \"}\r\n              &nbsp;|&nbsp;\r\n              <a\r\n                href=\"http://themeforest.net/item/metronic-responsive-admin-dashboard-template/4021469?ref=keenthemes\"\r\n                title=\"Purchase Metronic just for 27$ and get lifetime updates for free\"\r\n                target=\"_blank\"\r\n              >\r\n                Purchase Metronic!\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"scroll-to-top\">\r\n            <i className=\"icon-arrow-up\" />\r\n          </div>\r\n          {/* END INNER FOOTER */}\r\n          {/* END FOOTER */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\AltKategoriler\\AltKategoriEkle.js",["192"],"import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { getCategory } from \"../../redux/actions/categoryActions\";\r\n\r\nimport { setCategory } from \"../../redux/actions/subCategoryActions\";\r\nconst AltKategoriEkle = ({\r\n  getCategory,\r\n  setCategory,\r\n  kategori: { kategoriler },\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    altKategoriAdi: \"\",\r\n    kategori: \"\",\r\n  });\r\n  const [secilenKategoriIndex, setSecilenKategoriIndex] = useState(0);\r\n  const { altKategoriAdi, kategori } = formData;\r\n  useEffect(() => {\r\n    getCategory();\r\n  }, [kategoriler]);\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  let history = useHistory();\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (secilenKategoriIndex === 0) {\r\n      return;\r\n    }\r\n    setCategory({ altKategoriAdi, kategori });\r\n    history.push(\"/AltKategoriler\");\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"page-wrapper\">\r\n        <div className=\"page-wrapper-row full-height\">\r\n          <div className=\"page-wrapper-middle\">\r\n            <div className=\"page-container\">\r\n              <div className=\"page-content-wrapper\">\r\n                <div className=\"page-content\">\r\n                  <div className=\"container\">\r\n                    <ul className=\"page-breadcrumb breadcrumb\">\r\n                      <li>\r\n                        <a href=\"index.html\">Anasayfa</a>\r\n                        <i className=\"fa fa-circle\" />\r\n                      </li>\r\n\r\n                      <li>\r\n                        <span>Alt Kategori Ekle</span>\r\n                      </li>\r\n                    </ul>\r\n                    <div className=\"page-content-inner\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            className=\"portlet light portlet-fit portlet-form \"\r\n                            id=\"form_wizard_1\"\r\n                          >\r\n                            <div className=\"portlet-body\">\r\n                              {/* BEGIN FORM*/}\r\n                              <form\r\n                                onSubmit={(e) => onSubmit(e)}\r\n                                className=\"form-horizontal\"\r\n                              >\r\n                                <div className=\"form-body\">\r\n                                  <h3 className=\"form-section\">\r\n                                    Alt Kategori Ekle\r\n                                  </h3>\r\n                                  <div className=\"form-group \">\r\n                                    <label\r\n                                      className=\"control-label col-md-3\"\r\n                                      htmlFor=\"inputSuccess\"\r\n                                    >\r\n                                      Alt Kategori Adı\r\n                                    </label>\r\n                                    <div className=\"col-md-4\">\r\n                                      <input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputSuccess\"\r\n                                        name=\"altKategoriAdi\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={altKategoriAdi}\r\n                                      />{\" \"}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"form-group\">\r\n                                    <label class=\"control-label col-md-3\">\r\n                                      Kategori\r\n                                    </label>\r\n                                    <div class=\"col-md-4\">\r\n                                      <select\r\n                                        onChange={(e) => {\r\n                                          setSecilenKategoriIndex(\r\n                                            e.target.selectedIndex\r\n                                          );\r\n                                          onChange(e);\r\n                                        }}\r\n                                        required={\r\n                                          secilenKategoriIndex === 0\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        class=\"form-control\"\r\n                                        name=\"kategori\"\r\n                                      >\r\n                                        <option value=\"\">\r\n                                          Kategori Seçiniz\r\n                                        </option>\r\n                                        {kategoriler.map((kategori, index) => (\r\n                                          kategori.aktifMi ? (\r\n                                            <option\r\n                                              key={index}\r\n                                              value={kategori._id}\r\n                                            >\r\n                                              {kategori.kategoriAdi}\r\n                                            </option>\r\n                                          ) : (\r\n                                            \"\"\r\n                                          )\r\n                                        ))}\r\n                                      </select>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"form-actions\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col-md-offset-3 col-md-9\">\r\n                                      <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn green\"\r\n                                      >\r\n                                        Kaydet\r\n                                      </button>\r\n                                      <Link to=\"/AltKategoriler\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn default\"\r\n                                      >\r\n                                        İptal\r\n                                      </button>\r\n                                      </Link>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </form>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n             {/*  <a href=\"javascript:;\" className=\"page-quick-sidebar-toggler\">\r\n                <i className=\"icon-login\" />\r\n              </a>\r\n              <div\r\n                className=\"page-quick-sidebar-wrapper\"\r\n                data-close-on-body-click=\"false\"\r\n              ></div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nAltKategoriEkle.propTypes = {\r\n  setCategory: PropTypes.func.isRequired,\r\n  deleteCategory: PropTypes.func.isRequired,\r\n  setCategory: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  kategori: state.kategori,\r\n});\r\nexport default connect(mapStateToProps, { getCategory, setCategory })(\r\n  AltKategoriEkle\r\n);\r\n","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Kategoriler\\KategoriGuncelle.js",["193"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { updateCategory } from \"../../redux/actions/categoryActions\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nconst KategoriGuncelle = ({\r\n  location: { state },\r\n  updateCategory,\r\n  kategori: { err },\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    kategoriAdi: state == null ? \"\" : state.kategoriAdi,\r\n  });\r\n\r\n  const { kategoriAdi } = formData;\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    \r\n    if (typeof state === \"undefined\") {\r\n      return history.push(\"/Kategoriler\");\r\n    }\r\n  }, []);\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    updateCategory(kategoriAdi, state._id);\r\n    if (err) {\r\n      return;\r\n    } else {\r\n      history.push(\"/Kategoriler\");\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"page-wrapper\">\r\n        <div className=\"page-wrapper-row full-height\">\r\n          <div className=\"page-wrapper-middle\">\r\n            <div className=\"page-container\">\r\n              <div className=\"page-content-wrapper\">\r\n                <div className=\"page-content\">\r\n                  <div className=\"container\">\r\n                    <ul className=\"page-breadcrumb breadcrumb\">\r\n                      <li>\r\n                        <a href=\"index.html\">Anasayfa</a>\r\n                        <i className=\"fa fa-circle\" />\r\n                      </li>\r\n\r\n                      <li>\r\n                        <span>Kategori Ekle</span>\r\n                      </li>\r\n                    </ul>\r\n                    <div className=\"page-content-inner\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            className=\"portlet light portlet-fit portlet-form \"\r\n                            id=\"form_wizard_1\"\r\n                          >\r\n                            <div className=\"portlet-body\">\r\n                              {/* BEGIN FORM*/}\r\n                              <form\r\n                                onSubmit={(e) => onSubmit(e)}\r\n                                className=\"form-horizontal\"\r\n                              >\r\n                                <div className=\"form-body\">\r\n                                  <h3 className=\"form-section\">\r\n                                    Kategori Ekle\r\n                                  </h3>\r\n                                  <div className=\"form-group \">\r\n                                    <label\r\n                                      className=\"control-label col-md-3\"\r\n                                      htmlFor=\"inputSuccess\"\r\n                                    >\r\n                                      Kategori Adı\r\n                                    </label>\r\n                                    <div className=\"col-md-4\">\r\n                                      <input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputSuccess\"\r\n                                        name=\"kategoriAdi\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={kategoriAdi}\r\n                                      />{\" \"}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"form-actions\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col-md-offset-3 col-md-9\">\r\n                                      <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn green\"\r\n                                      >\r\n                                        Kaydet\r\n                                      </button>\r\n                                      <Link to=\"/Kategoriler\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn default\"\r\n                                      >\r\n                                        İptal\r\n                                      </button>\r\n                                      </Link>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </form>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n           {/*    <a href=\"javascript:;\" className=\"page-quick-sidebar-toggler\">\r\n                <i className=\"icon-login\" />\r\n              </a>\r\n              <div\r\n                className=\"page-quick-sidebar-wrapper\"\r\n                data-close-on-body-click=\"false\"\r\n              ></div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nKategoriGuncelle.propTypes = {\r\n  updateCategory: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({ kategori: state.kategori });\r\nexport default connect(mapStateToProps, { updateCategory })(KategoriGuncelle);\r\n","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Kategoriler\\KategoriEkle.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\AltKategoriler\\AltKategoriGuncelle.js",["194"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { getCategory } from \"../../redux/actions/categoryActions\";\r\n\r\nimport { updateSubCategory } from \"../../redux/actions/subCategoryActions\";\r\nconst AltKategoriGuncelle = ({\r\n  location: { state },\r\n  updateSubCategory,\r\n  getCategory,\r\n  kategori: { kategoriler },\r\n}) => {\r\n  let history = useHistory();\r\n\r\n  const [formData, setFormData] = useState({\r\n    altKategoriAdi: state == null ? \"\" : state.altKategoriAdi,\r\n    kategori: state == null ? \"\" : state.kategori._id,\r\n  });\r\n  const [secilenKategoriIndex, setSecilenKategoriIndex] = useState(1);\r\n  const { altKategoriAdi, kategori } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  useEffect(() => {\r\n    \r\n    if (typeof state === \"undefined\") {\r\n      return history.push(\"/AltKategoriler\");\r\n    }\r\n    getCategory();\r\n  }, []);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    updateSubCategory(altKategoriAdi, kategori, state._id);\r\n\r\n    history.push(\"/AltKategoriler\");\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"page-wrapper\">\r\n        <div className=\"page-wrapper-row full-height\">\r\n          <div className=\"page-wrapper-middle\">\r\n            <div className=\"page-container\">\r\n              <div className=\"page-content-wrapper\">\r\n                <div className=\"page-content\">\r\n                  <div className=\"container\">\r\n                    <ul className=\"page-breadcrumb breadcrumb\">\r\n                      <li>\r\n                        <a href=\"index.html\">Anasayfa</a>\r\n                        <i className=\"fa fa-circle\" />\r\n                      </li>\r\n\r\n                      <li>\r\n                        <span>Alt Kategori Ekle</span>\r\n                      </li>\r\n                    </ul>\r\n                    <div className=\"page-content-inner\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            className=\"portlet light portlet-fit portlet-form \"\r\n                            id=\"form_wizard_1\"\r\n                          >\r\n                            <div className=\"portlet-body\">\r\n                              {/* BEGIN FORM*/}\r\n                              <form\r\n                                onSubmit={(e) => onSubmit(e)}\r\n                                className=\"form-horizontal\"\r\n                              >\r\n                                <div className=\"form-body\">\r\n                                  <h3 className=\"form-section\">\r\n                                    Alt Kategori Ekle\r\n                                  </h3>\r\n                                  <div className=\"form-group \">\r\n                                    <label\r\n                                      className=\"control-label col-md-3\"\r\n                                      htmlFor=\"inputSuccess\"\r\n                                    >\r\n                                      Alt Kategori Adı\r\n                                    </label>\r\n                                    <div className=\"col-md-4\">\r\n                                      <input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputSuccess\"\r\n                                        name=\"altKategoriAdi\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={altKategoriAdi}\r\n                                      />{\" \"}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"form-group\">\r\n                                    <label class=\"control-label col-md-3\">\r\n                                      Kategori\r\n                                    </label>\r\n                                    <div class=\"col-md-4\">\r\n                                      <select\r\n                                        onChange={(e) => {\r\n                                          onChange(e);\r\n                                          setSecilenKategoriIndex(\r\n                                            e.target.selectedIndex\r\n                                          );\r\n                                        }}\r\n                                        class=\"form-control\"\r\n                                        name=\"kategori\"\r\n                                        required={\r\n                                          secilenKategoriIndex === 0\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      >\r\n                                        <option value=\"\">\r\n                                          Kategori Seçiniz\r\n                                        </option>\r\n                                        {kategoriler.map(\r\n                                          (kategori, index) =>\r\n                                            kategori.aktifMi && (\r\n                                              <option\r\n                                                key={index}\r\n                                                value={kategori._id}\r\n                                                selected={\r\n                                                  kategori.kategoriAdi ===\r\n                                                  state.kategori.kategoriAdi\r\n                                                }\r\n                                              >\r\n                                                {kategori.kategoriAdi}\r\n                                              </option>\r\n                                            )\r\n                                        )}\r\n                                      </select>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"form-actions\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col-md-offset-3 col-md-9\">\r\n                                      <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn green\"\r\n                                      >\r\n                                        Kaydet\r\n                                      </button>\r\n                                      <Link to=\"/AltKategoriler\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn default\"\r\n                                      >\r\n                                        İptal\r\n                                      </button>\r\n                                      </Link>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </form>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* \r\n              <a href=\"javascript:;\" className=\"page-quick-sidebar-toggler\">\r\n                <i className=\"icon-login\" />\r\n              </a>\r\n              <div\r\n                className=\"page-quick-sidebar-wrapper\"\r\n                data-close-on-body-click=\"false\"\r\n              ></div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nAltKategoriGuncelle.propTypes = {\r\n  setCategory: PropTypes.func.isRequired,\r\n  deleteCategory: PropTypes.func.isRequired,\r\n  updateSubCategory: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  kategori: state.kategori,\r\n});\r\nexport default connect(mapStateToProps, { getCategory, updateSubCategory })(\r\n  AltKategoriGuncelle\r\n);\r\n","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Kategoriler\\KategoriList.js",["195"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getCategory,\r\n  deleteCategory,\r\n} from \"../../redux/actions/categoryActions\";\r\nimport Spinner from \"../Spinner\";\r\nconst KategoriList = ({\r\n  getCategory,\r\n  deleteCategory,\r\n  kategori: { kategoriler, loading },\r\n}) => {\r\n  //const kategori1 = useSelector(state => state.kategori)\r\n  /* const mapStateToProps = (state) => ({\r\n  kategori: state.kategori,\r\n});\r\n */\r\n  \r\n  useEffect(() => {\r\n    getCategory();\r\n  }, [kategoriler]);\r\n  const onclickFunc = (aktifMi, id) => {\r\n    deleteCategory({ aktifMi, id });\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"portlet box green\">\r\n        <div className=\"portlet-title\">\r\n          <div className=\"caption\">Kategoriler </div>\r\n          <div class=\"tools\">\r\n            <Link to=\"/KategoriEkle\" style={{ color: \"white\" }}>\r\n              Kategori Ekle\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"portlet-body flip-scroll\">\r\n          <table className=\"table table-bordered table-striped table-condensed flip-content\">\r\n            <thead className=\"flip-content\">\r\n              <tr>\r\n                <th width=\"20%\"> Kategori Adı </th>\r\n                <th> Düzenle </th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {loading ? (\r\n                <Spinner />\r\n              ) : (\r\n                kategoriler.map((kategori) =>\r\n                  kategori.aktifMi ? (\r\n                    <tr key={kategori._id}>\r\n                      <td> {kategori.kategoriAdi} </td>\r\n                      <td>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={(e) => {\r\n                            onclickFunc(false, kategori._id);\r\n                          }}\r\n                          className=\"btn green\"\r\n                        >\r\n                          Sil\r\n                        </button>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/KategoriGuncelle/\",\r\n                            state: kategori,\r\n                          }}\r\n                          className=\"btn green\"\r\n                        >\r\n                          Güncelle\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nKategoriList.propTypes = {\r\n  setCategory: PropTypes.func.isRequired,\r\n  deleteCategory: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  kategori: state.kategori,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCategory, deleteCategory })(\r\n  KategoriList\r\n);\r\n","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Login\\Login.js",["196"],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Projeler\\ProjeList.js",["197"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { deleteProject, getProject } from \"../../redux/actions/projectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nimport Spinner from \"../Spinner\";\r\nconst ProjeList = ({\r\n  getProject,\r\n  deleteProject,\r\n  proje: { projeler,loading },\r\n  isAuthenticated,\r\n}) => {\r\n  useEffect(() => {\r\n    getProject();\r\n\r\n    if (isAuthenticated) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n  }, [projeler]);\r\n  const onclickFunc = (aktifMi, id) => {\r\n    deleteProject({ aktifMi, id });\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"portlet box green\">\r\n        <div className=\"portlet-title\">\r\n          <div className=\"caption\">Projeler </div>\r\n          <div class=\"tools\">\r\n            <Link to=\"/ProjeEkle\" style={{ color: \"white\" }}>\r\n              Proje Ekle\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"portlet-body flip-scroll\">\r\n          <table className=\"table table-bordered table-striped table-condensed flip-content\">\r\n            <thead className=\"flip-content\">\r\n              <tr>\r\n                <th width=\"15%\"> Proje Adı </th>\r\n                <th width=\"15%\"> Adres </th>\r\n                <th width=\"15%\"> Metre Kare </th>\r\n                <th width=\"15%\"> Eklenme Tarihi </th>\r\n                <th width=\"15%\"> Kategori </th>\r\n                <th width=\"15%\"> Alt Kategori </th>\r\n                <th> Düzenle </th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {loading ? (\r\n                <Spinner />\r\n              ) : (\r\n                projeler.map((pro) =>\r\n                  pro.aktifMi &&\r\n                  //pro.altKategori !== null &&\r\n                  pro.kategori.aktifMi /* &&\r\n                  pro.altKategori.aktifMi */ ? (\r\n                    <tr key={pro._id}>\r\n                      <td> {pro.projeAdi} </td>\r\n                      <td> {pro.adres} </td>\r\n                      <td> {pro.metreKare} </td>\r\n                      <td>{Moment(pro.eklenmeTarihi).format(\"DD-MM-YYYY\")}</td>\r\n                      <td> {pro.kategori.kategoriAdi} </td>\r\n                      <td> {pro.altKategori ==null ? '':pro.altKategori.altKategoriAdi} </td>\r\n                      <td>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={(e) => {\r\n                            onclickFunc(false, pro._id);\r\n                          }}\r\n                          className=\"btn green\"\r\n                        >\r\n                          Sil\r\n                        </button>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/ProjeGuncelle\",\r\n                            state: pro,\r\n                          }}\r\n                          className=\"btn green\"\r\n                        >\r\n                          Güncelle\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nProjeList.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  proje: state.projeReducer,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, deleteProject })(ProjeList);\r\n","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Projeler\\ProjeGuncelle.js",["198","199","200","201","202"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateProject } from \"../../redux/actions/projectActions\";\r\nimport { getCategory } from \"../../redux/actions/categoryActions\";\r\nimport { getSubCategoryWithCategory } from \"../../redux/actions/subCategoryActions\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nconst ProjeGuncelle = ({\r\n  location: { state },\r\n  getCategory,\r\n  kategori: { kategoriler },\r\n  getSubCategoryWithCategory,\r\n  altKategori: { subCategoryWithCategory, loading },\r\n  updateProject,\r\n}) => {\r\n  let history = useHistory();\r\n\r\n  const [kategoriIndex, setCategoryIndex] = useState(0);\r\n  const [secilenKategoriIndex, setSecilenKategoriIndex] = useState(1);\r\n  const [secilenAltKategoriIndex, setAltSecilenKategoriIndex] = useState(0);\r\n  if (typeof state === \"undefined\") {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  const [formData, setFormData] = useState({\r\n    projeAdi: state == null ? \"\" : state.projeAdi,\r\n    adres: state == null ? \"\" : state.adres,\r\n    metreKare: state == null ? \"\" : state.metreKare,\r\n    kategori: state == null ? \"\" : state.kategori._id,\r\n    altKategori:\r\n      typeof state.altKategori === \"undefined\" ||\r\n      state.altKategori == null ||\r\n      state == null\r\n        ? \"\"\r\n        : state.altKategori._id,\r\n    aciklama: state == null ? \"\" : state.aciklama,\r\n  });\r\n  const [resim, setResim] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [hata, setHata] = useState(false);\r\n  const [photoIndex, setPhotoIndex] = useState(0);\r\n  const [images, setImages] = useState([]);\r\n  const maxNumber = 40;\r\n\r\n  const {\r\n    projeAdi,\r\n    adres,\r\n    metreKare,\r\n    kategori,\r\n    altKategori,\r\n    aciklama,\r\n  } = formData;\r\n  useEffect(() => {\r\n    if (typeof state === \"undefined\") {\r\n      return history.push(\"/\");\r\n    }\r\n    console.log(subCategoryWithCategory);\r\n    getCategory();\r\n    getSubCategoryWithCategory(state.kategori._id);\r\n    setImages(state.resim);\r\n    setResim(state.resim);\r\n  }, []);\r\n  const onChangeImage = (imageList, addUpdateIndex) => {\r\n    // data for submit\r\n\r\n    if (imageList.length === 0) {\r\n      setHata(true);\r\n    } else {\r\n      setHata(false);\r\n    }\r\n    setImages(imageList);\r\n\r\n    for (let index = 0; index < imageList.length; index++) {\r\n      if (typeof imageList[index].file !== \"undefined\") {\r\n        setResim((old) => [...old, imageList[index].file]);\r\n      }\r\n    }\r\n\r\n    /*    imageList.forEach((im, index) =>\r\n      resim.forEach((res) => {\r\n        if (im === res) {\r\n          finalArray.push(index);\r\n        }\r\n      })\r\n    ); */\r\n  };\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let form_data = new FormData();\r\n    if (hata) {\r\n      window.alert(\"Lütfen Resim Seçiniz\");\r\n      return;\r\n    }\r\n    form_data.append(\"projeAdi\", projeAdi);\r\n    form_data.append(\"adres\", adres);\r\n    form_data.append(\"metreKare\", metreKare);\r\n    form_data.append(\"kategori\", kategori);\r\n    debugger;\r\n    form_data.append(\r\n      \"altKategori\",\r\n      secilenAltKategoriIndex === 0 ? null : altKategori\r\n    );\r\n\r\n    form_data.append(\"aciklama\", aciklama);\r\n\r\n    for (let index = 0; index < resim.length; index++) {\r\n      form_data.append(\"resim\", resim[index]);\r\n    }\r\n    if (secilenKategoriIndex === 0) {\r\n      return;\r\n    }\r\n    updateProject(form_data, state._id);\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"page-wrapper\">\r\n        <div className=\"page-wrapper-row full-height\">\r\n          <div className=\"page-wrapper-middle\">\r\n            <div className=\"page-container\">\r\n              <div className=\"page-content-wrapper\">\r\n                <div className=\"page-content\">\r\n                  <div className=\"container\">\r\n                    <ul className=\"page-breadcrumb breadcrumb\">\r\n                      <li>\r\n                        <a href=\"index.html\">Anasayfa</a>\r\n                        <i className=\"fa fa-circle\" />\r\n                      </li>\r\n\r\n                      <li>\r\n                        <span>Proje Guncelle</span>\r\n                      </li>\r\n                    </ul>\r\n                    <div className=\"page-content-inner\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            className=\"portlet light portlet-fit portlet-form \"\r\n                            id=\"form_wizard_1\"\r\n                          >\r\n                            <div className=\"portlet-body\">\r\n                              {/* BEGIN FORM*/}\r\n                              <form\r\n                                onSubmit={(e) => onSubmit(e)}\r\n                                className=\"form-horizontal\"\r\n                              >\r\n                                <div className=\"form-body\">\r\n                                  <h3 className=\"form-section\">\r\n                                    Proje Guncelle\r\n                                  </h3>\r\n                                  <div className=\"form-group \">\r\n                                    <label\r\n                                      className=\"control-label col-md-3\"\r\n                                      htmlFor=\"inputSuccess\"\r\n                                    >\r\n                                      Proje Adı\r\n                                    </label>\r\n                                    <div className=\"col-md-4\">\r\n                                      <input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputSuccess\"\r\n                                        name=\"projeAdi\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={projeAdi}\r\n                                      />{\" \"}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"form-group \">\r\n                                    <label\r\n                                      className=\"control-label col-md-3\"\r\n                                      htmlFor=\"inputSuccess\"\r\n                                    >\r\n                                      Adres\r\n                                    </label>\r\n                                    <div className=\"col-md-4\">\r\n                                      <input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputSuccess\"\r\n                                        name=\"adres\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={adres}\r\n                                      />{\" \"}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"form-group \">\r\n                                    <label\r\n                                      className=\"control-label col-md-3\"\r\n                                      htmlFor=\"inputSuccess\"\r\n                                    >\r\n                                      Metre Kare\r\n                                    </label>\r\n                                    <div className=\"col-md-4\">\r\n                                      <input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputSuccess\"\r\n                                        name=\"metreKare\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={metreKare}\r\n                                      />{\" \"}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"form-group \">\r\n                                    <label\r\n                                      className=\"control-label col-md-3\"\r\n                                      htmlFor=\"inputSuccess\"\r\n                                    >\r\n                                      Aciklama\r\n                                    </label>\r\n                                    <div className=\"col-md-4\">\r\n                                      <input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputSuccess\"\r\n                                        name=\"aciklama\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={aciklama}\r\n                                      />{\" \"}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"form-group\">\r\n                                    <label class=\"control-label col-md-3\">\r\n                                      Kategori\r\n                                    </label>\r\n                                    <div class=\"col-md-4\">\r\n                                      <select\r\n                                        name=\"kategori\"\r\n                                        onChange={async (e) => {\r\n                                          if (e.target.selectedIndex === 0) {\r\n                                            setCategoryIndex(0);\r\n                                          } else {\r\n                                            setCategoryIndex(1);\r\n                                          }\r\n                                          setSecilenKategoriIndex(\r\n                                            e.target.selectedIndex\r\n                                          );\r\n                                          getSubCategoryWithCategory(\r\n                                            e.target.value\r\n                                          );\r\n                                          onChange(e);\r\n                                          loading = false;\r\n                                        }}\r\n                                        required={\r\n                                          secilenKategoriIndex === 0\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        class=\"form-control\"\r\n                                      >\r\n                                        <option value=\"\">\r\n                                          Kategori Seçiniz\r\n                                        </option>\r\n                                        {kategoriler.map((kategori, index) =>\r\n                                          kategori.aktifMi ? (\r\n                                            <option\r\n                                              key={index}\r\n                                              value={kategori._id}\r\n                                              selected={\r\n                                                kategori.kategoriAdi ===\r\n                                                state.kategori.kategoriAdi\r\n                                              }\r\n                                            >\r\n                                              {kategori.kategoriAdi}\r\n                                            </option>\r\n                                          ) : (\r\n                                            \"\"\r\n                                          )\r\n                                        )}\r\n                                      </select>\r\n                                    </div>\r\n                                  </div>\r\n                                  {typeof state.altKategori === \"undefined\" &&\r\n                                  subCategoryWithCategory.length === 0 ? (\r\n                                    \"\"\r\n                                  ) : (\r\n                                    <div class=\"form-group\">\r\n                                      <label class=\"control-label col-md-3\">\r\n                                        Alt Kategori\r\n                                      </label>\r\n                                      <div class=\"col-md-4\">\r\n                                        <select\r\n                                          //required={\r\n                                          //   secilenAltKategoriIndex === 0\r\n                                          //     ? true\r\n                                          //      : false\r\n                                          //  }\r\n                                          class=\"form-control\"\r\n                                          name=\"altKategori\"\r\n                                          onChange={(e) => {\r\n                                            onChange(e);\r\n                                            setAltSecilenKategoriIndex(\r\n                                              e.target.selectedIndex\r\n                                            );\r\n                                          }}\r\n                                        >\r\n                                          <option value=\"\">\r\n                                            Alt Kategori Seçiniz\r\n                                          </option>\r\n\r\n                                          {subCategoryWithCategory &&\r\n                                            subCategoryWithCategory.map(\r\n                                              (altKategori1, index) =>\r\n                                                altKategori1.aktifMi ? (\r\n                                                  <option\r\n                                                    key={index}\r\n                                                    value={altKategori1._id}\r\n                                                    selected={\r\n                                                      typeof state.altKategori ===\r\n                                                        \"undefined\" ||\r\n                                                      state.altKategori == null\r\n                                                        ? false\r\n                                                        : state.altKategori\r\n                                                            .altKategoriAdi ==\r\n                                                          altKategori1.altKategoriAdi\r\n                                                    }\r\n                                                  >\r\n                                                    {\r\n                                                      altKategori1.altKategoriAdi\r\n                                                    }\r\n                                                  </option>\r\n                                                ) : (\r\n                                                  \"\"\r\n                                                )\r\n                                            )}\r\n                                        </select>\r\n                                      </div>\r\n                                    </div>\r\n                                  )}\r\n                                  <div className=\"form-group\">\r\n                                    <label className=\"control-label col-md-3\">\r\n                                      Resim\r\n                                    </label>\r\n                                    <div className=\"col-md-3\">\r\n                                      <div\r\n                                        className=\"fileinput fileinput-new\"\r\n                                        data-provides=\"fileinput\"\r\n                                      >\r\n                                        <div className=\"input-group input-large\">\r\n                                          <ImageUploading\r\n                                            multiple\r\n                                            value={images}\r\n                                            onChange={onChangeImage}\r\n                                            maxNumber={maxNumber}\r\n                                            dataURLKey=\"data_url\"\r\n                                          >\r\n                                            {({\r\n                                              imageList,\r\n                                              onImageUpload,\r\n                                              onImageRemoveAll,\r\n                                              onImageUpdate,\r\n                                              onImageRemove,\r\n                                              isDragging,\r\n                                              dragProps,\r\n                                            }) => (\r\n                                              // write your building UI\r\n                                              <div className=\"upload__image-wrapper\">\r\n                                                <button\r\n                                                  style={\r\n                                                    isDragging\r\n                                                      ? { color: \"red\" }\r\n                                                      : undefined\r\n                                                  }\r\n                                                  type=\"button\"\r\n                                                  className=\"btn green\"\r\n                                                  onClick={onImageUpload}\r\n                                                  {...dragProps}\r\n                                                >\r\n                                                  Resim Ekle\r\n                                                </button>\r\n                                                &nbsp;\r\n                                                {/* <button\r\n                                                  onClick={onImageRemoveAll}\r\n                                                  className=\"btn green\"\r\n                                                  type=\"button\"\r\n                                                >\r\n                                                  Tüm Resimleri Sil\r\n                                                </button> */}\r\n                                                {imageList.map(\r\n                                                  (image, index) => (\r\n                                                    <div\r\n                                                      key={index}\r\n                                                      className=\"image-item\"\r\n                                                    >\r\n                                                      {typeof image[\r\n                                                        \"data_url\"\r\n                                                      ] !== \"undefined\" ? (\r\n                                                        <div>\r\n                                                          <img\r\n                                                            onClick={() => {\r\n                                                              setIsOpen(true);\r\n\r\n                                                              setPhotoIndex(\r\n                                                                index\r\n                                                              );\r\n                                                            }}\r\n                                                            src={\r\n                                                              image[\"data_url\"]\r\n                                                            }\r\n                                                            alt=\"\"\r\n                                                            width=\"100\"\r\n                                                          />\r\n                                                          <div className=\"image-item__btn-wrapper\">\r\n                                                            <button\r\n                                                              onClick={() => {\r\n                                                                onImageRemove(\r\n                                                                  index\r\n                                                                );\r\n                                                              }}\r\n                                                              className=\"btn green\"\r\n                                                              type=\"button\"\r\n                                                            >\r\n                                                              Sil\r\n                                                            </button>\r\n                                                          </div>\r\n                                                        </div>\r\n                                                      ) : (\r\n                                                        <div>\r\n                                                          <img\r\n                                                            onClick={() => {\r\n                                                              setIsOpen(true);\r\n\r\n                                                              setPhotoIndex(\r\n                                                                index\r\n                                                              );\r\n                                                            }}\r\n                                                            src={image}\r\n                                                            alt=\"\"\r\n                                                            width=\"100\"\r\n                                                          />\r\n                                                          <div className=\"image-item__btn-wrapper\">\r\n                                                            <button\r\n                                                              onClick={() => {\r\n                                                                onImageRemove(\r\n                                                                  index\r\n                                                                );\r\n                                                                resim.splice(\r\n                                                                  index,\r\n                                                                  1\r\n                                                                );\r\n                                                              }}\r\n                                                              className=\"btn green\"\r\n                                                              type=\"button\"\r\n                                                            >\r\n                                                              Sil\r\n                                                            </button>\r\n                                                          </div>\r\n                                                        </div>\r\n                                                      )}\r\n                                                    </div>\r\n                                                  )\r\n                                                )}\r\n                                                {isOpen && (\r\n                                                  <Lightbox\r\n                                                    mainSrc={\r\n                                                      typeof images[photoIndex]\r\n                                                        .data_url ===\r\n                                                      \"undefined\"\r\n                                                        ? resim[photoIndex]\r\n                                                        : images[photoIndex]\r\n                                                            .data_url\r\n                                                    }\r\n                                                    nextSrc={\r\n                                                      resim[\r\n                                                        (photoIndex + 1) %\r\n                                                          resim.length\r\n                                                      ]\r\n                                                    }\r\n                                                    prevSrc={\r\n                                                      resim[\r\n                                                        (photoIndex +\r\n                                                          resim.length -\r\n                                                          1) %\r\n                                                          resim.length\r\n                                                      ]\r\n                                                    }\r\n                                                    onCloseRequest={() =>\r\n                                                      setIsOpen(false)\r\n                                                    }\r\n                                                    onMovePrevRequest={() =>\r\n                                                      setPhotoIndex(\r\n                                                        (photoIndex +\r\n                                                          resim.length -\r\n                                                          1) %\r\n                                                          resim.length\r\n                                                      )\r\n                                                    }\r\n                                                    onMoveNextRequest={() =>\r\n                                                      setPhotoIndex(\r\n                                                        (photoIndex + 1) %\r\n                                                          resim.length\r\n                                                      )\r\n                                                    }\r\n                                                  />\r\n                                                )}\r\n                                              </div>\r\n                                            )}\r\n                                          </ImageUploading>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>{\" \"}\r\n                                </div>\r\n                                <div className=\"form-actions\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col-md-offset-3 col-md-9\">\r\n                                      <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn green\"\r\n                                      >\r\n                                        Kaydet\r\n                                      </button>\r\n                                      <Link to=\"/\">\r\n                                        <button\r\n                                          type=\"button\"\r\n                                          className=\"btn default\"\r\n                                        >\r\n                                          İptal\r\n                                        </button>\r\n                                      </Link>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </form>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <a href=\"javascript:;\" className=\"page-quick-sidebar-toggler\">\r\n                <i className=\"icon-login\" />\r\n              </a>\r\n              <div\r\n                className=\"page-quick-sidebar-wrapper\"\r\n                data-close-on-body-click=\"false\"\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nProjeGuncelle.propTypes = {\r\n  updateProject: PropTypes.func.isRequired,\r\n  getSubCategoryWithCategory: PropTypes.func.isRequired,\r\n  getCategory: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  kategori: state.kategori,\r\n  altKategori: state.altKategori,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  updateProject,\r\n  getCategory,\r\n  getSubCategoryWithCategory,\r\n})(ProjeGuncelle);\r\n","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Projeler\\ProjeEkle.js",["203","204","205"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProject } from \"../../redux/actions/projectActions\";\r\nimport { getCategory } from \"../../redux/actions/categoryActions\";\r\nimport { getSubCategoryWithCategory } from \"../../redux/actions/subCategoryActions\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport Spinner from \"../Spinner\";\r\nimport \"react-image-lightbox/style.css\";\r\nconst ProjeEkle = ({\r\n  getCategory,\r\n  kategori: { kategoriler },\r\n  getSubCategoryWithCategory,\r\n  altKategori: { subCategoryWithCategory, loading },\r\n  setProject,\r\n}) => {\r\n  const [kategoriIndex, setCategoryIndex] = useState(0);\r\n  const [secilenKategoriIndex, setSecilenKategoriIndex] = useState(0);\r\n  const [secilenAltKategoriIndex, setAltSecilenKategoriIndex] = useState(0);\r\n  const [formData, setFormData] = useState({\r\n    projeAdi: \"\",\r\n    adres: \"\",\r\n    metreKare: \"\",\r\n    kategori: \"\",\r\n    altKategori: \"\",\r\n    aciklama: \"\",\r\n  });\r\n\r\n  const [resim, setResim] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [photoIndex, setPhotoIndex] = useState(0);\r\n  const [images, setImages] = useState([]);\r\n  // eslint-disable-next-line\r\n  const [hata, setHata] = useState(false);\r\n  const maxNumber = 40;\r\n  let history = useHistory();\r\n  const {\r\n    projeAdi,\r\n    adres,\r\n    metreKare,\r\n    kategori,\r\n    altKategori,\r\n    aciklama,\r\n  } = formData;\r\n  useEffect(() => {\r\n    getCategory();\r\n  }, [kategoriler, subCategoryWithCategory]);\r\n\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const onChangeImage = (imageList, addUpdateIndex) => {\r\n    if (imageList.length === 0) {\r\n      setResim([]);\r\n    }\r\n    if (imageList.length !== resim.length) {\r\n      setResim([]);\r\n    }\r\n    // data for submit\r\n\r\n    setImages(imageList);\r\n    for (let index = 0; index < imageList.length; index++) {\r\n      setResim((old) => [...old, imageList[index].file]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (resim.length === 0) {\r\n      setHata(true);\r\n      window.alert(\"Lütfen Resim Seçiniz\");\r\n      return;\r\n    }\r\n\r\n    let form_data = new FormData();\r\n    form_data.append(\"projeAdi\", projeAdi);\r\n    form_data.append(\"adres\", adres);\r\n    form_data.append(\"metreKare\", metreKare);\r\n    form_data.append(\"kategori\", kategori);\r\n    if (altKategori.length !== 0) {\r\n      form_data.append(\"altKategori\", altKategori);\r\n    }\r\n\r\n    form_data.append(\"aciklama\", aciklama);\r\n    for (let index = 0; index < resim.length; index++) {\r\n      form_data.append(\"resim\", resim[index]);\r\n    }\r\n\r\n    if (secilenKategoriIndex === 0) {\r\n      return;\r\n    }\r\n    debugger;\r\n    setProject(form_data);\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"page-wrapper\">\r\n        <div className=\"page-wrapper-row full-height\">\r\n          <div className=\"page-wrapper-middle\">\r\n            <div className=\"page-container\">\r\n              <div className=\"page-content-wrapper\">\r\n                <div className=\"page-content\">\r\n                  <div className=\"container\">\r\n                    <ul className=\"page-breadcrumb breadcrumb\">\r\n                      <li>\r\n                        <a href=\"index.html\">Anasayfa</a>\r\n                        <i className=\"fa fa-circle\" />\r\n                      </li>\r\n\r\n                      <li>\r\n                        <span>Proje Ekle</span>\r\n                      </li>\r\n                    </ul>\r\n                    <div className=\"page-content-inner\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            className=\"portlet light portlet-fit portlet-form \"\r\n                            id=\"form_wizard_1\"\r\n                          >\r\n                            <div className=\"portlet-body\">\r\n                              {/* BEGIN FORM*/}\r\n                              <form\r\n                                onSubmit={(e) => onSubmit(e)}\r\n                                className=\"form-horizontal\"\r\n                              >\r\n                                <div className=\"form-body\">\r\n                                  <h3 className=\"form-section\">Proje Ekle</h3>\r\n                                  <div className=\"form-group \">\r\n                                    <label\r\n                                      className=\"control-label col-md-3\"\r\n                                      htmlFor=\"inputSuccess\"\r\n                                    >\r\n                                      Proje Adı\r\n                                    </label>\r\n                                    <div className=\"col-md-4\">\r\n                                      <input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputSuccess\"\r\n                                        name=\"projeAdi\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={projeAdi}\r\n                                      />{\" \"}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"form-group \">\r\n                                    <label\r\n                                      className=\"control-label col-md-3\"\r\n                                      htmlFor=\"inputSuccess\"\r\n                                    >\r\n                                      Adres\r\n                                    </label>\r\n                                    <div className=\"col-md-4\">\r\n                                      <input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputSuccess\"\r\n                                        name=\"adres\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={adres}\r\n                                      />{\" \"}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"form-group \">\r\n                                    <label\r\n                                      className=\"control-label col-md-3\"\r\n                                      htmlFor=\"inputSuccess\"\r\n                                    >\r\n                                      Metre Kare\r\n                                    </label>\r\n                                    <div className=\"col-md-4\">\r\n                                      <input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputSuccess\"\r\n                                        name=\"metreKare\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={metreKare}\r\n                                      />{\" \"}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"form-group \">\r\n                                    <label\r\n                                      className=\"control-label col-md-3\"\r\n                                      htmlFor=\"inputSuccess\"\r\n                                    >\r\n                                      Aciklama\r\n                                    </label>\r\n                                    <div className=\"col-md-4\">\r\n                                      <input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputSuccess\"\r\n                                        name=\"aciklama\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={aciklama}\r\n                                      />{\" \"}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"form-group\">\r\n                                    <label class=\"control-label col-md-3\">\r\n                                      Kategori\r\n                                    </label>\r\n                                    <div class=\"col-md-4\">\r\n                                      <select\r\n                                        name=\"kategori\"\r\n                                        onChange={async (e) => {\r\n                                          if (e.target.selectedIndex === 0) {\r\n                                            setCategoryIndex(0);\r\n                                          } else {\r\n                                            setCategoryIndex(1);\r\n                                          }\r\n                                          setSecilenKategoriIndex(\r\n                                            e.target.selectedIndex\r\n                                          );\r\n                                          getSubCategoryWithCategory(\r\n                                            e.target.value\r\n                                          );\r\n                                          onChange(e);\r\n                                        }}\r\n                                        required={\r\n                                          secilenKategoriIndex === 0\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        class=\"form-control\"\r\n                                      >\r\n                                        <option value=\"\">\r\n                                          Kategori Seçiniz\r\n                                        </option>\r\n                                        {kategoriler.map((kategori, index) =>\r\n                                          kategori.aktifMi ? (\r\n                                            <option\r\n                                              key={index}\r\n                                              value={kategori._id}\r\n                                            >\r\n                                              {kategori.kategoriAdi}\r\n                                            </option>\r\n                                          ) : (\r\n                                            \"\"\r\n                                          )\r\n                                        )}\r\n                                      </select>\r\n                                    </div>\r\n                                  </div>\r\n                                  {subCategoryWithCategory.length === 0 ||\r\n                                  loading ||\r\n                                  kategoriIndex === 0 ? (\r\n                                    \"\"\r\n                                  ) : (\r\n                                    <div class=\"form-group\">\r\n                                      <label class=\"control-label col-md-3\">\r\n                                        Alt Kategori\r\n                                      </label>\r\n                                      <div class=\"col-md-4\">\r\n                                        <select\r\n                                          // required={\r\n                                          //secilenAltKategoriIndex === 0\r\n                                          //? true\r\n                                          //: false\r\n                                          //}\r\n                                          class=\"form-control\"\r\n                                          name=\"altKategori\"\r\n                                          onChange={(e) => {\r\n                                            setAltSecilenKategoriIndex(\r\n                                              e.target.selectedIndex\r\n                                            );\r\n                                            onChange(e);\r\n                                          }}\r\n                                        >\r\n                                          <option value=\"\">\r\n                                            Alt Kategori Seçiniz\r\n                                          </option>\r\n\r\n                                          {subCategoryWithCategory &&\r\n                                            subCategoryWithCategory.map(\r\n                                              (altKategori1, index) =>\r\n                                                altKategori1.aktifMi ? (\r\n                                                  <option\r\n                                                    key={index}\r\n                                                    value={altKategori1._id}\r\n                                                  >\r\n                                                    {\r\n                                                      altKategori1.altKategoriAdi\r\n                                                    }\r\n                                                  </option>\r\n                                                ) : (\r\n                                                  \"\"\r\n                                                )\r\n                                            )}\r\n                                        </select>\r\n                                      </div>\r\n                                    </div>\r\n                                  )}\r\n                                  <div className=\"form-group\">\r\n                                    <label className=\"control-label col-md-3\">\r\n                                      Resim\r\n                                    </label>\r\n                                    <div className=\"col-md-3\">\r\n                                      <div\r\n                                        className=\"fileinput fileinput-new\"\r\n                                        data-provides=\"fileinput\"\r\n                                      >\r\n                                        <div className=\"input-group input-large\">\r\n                                          <ImageUploading\r\n                                            multiple\r\n                                            value={images}\r\n                                            onChange={onChangeImage}\r\n                                            maxNumber={maxNumber}\r\n                                            dataURLKey=\"data_url\"\r\n                                          >\r\n                                            {({\r\n                                              imageList,\r\n                                              onImageUpload,\r\n                                              onImageRemoveAll,\r\n                                              onImageUpdate,\r\n                                              onImageRemove,\r\n                                              isDragging,\r\n                                              dragProps,\r\n                                            }) => (\r\n                                              // write your building UI\r\n                                              <div className=\"upload__image-wrapper\">\r\n                                                <button\r\n                                                  style={\r\n                                                    isDragging\r\n                                                      ? { color: \"red\" }\r\n                                                      : undefined\r\n                                                  }\r\n                                                  type=\"button\"\r\n                                                  className=\"btn green\"\r\n                                                  onClick={onImageUpload}\r\n                                                  {...dragProps}\r\n                                                >\r\n                                                  Resim Ekle\r\n                                                </button>\r\n                                                <div\r\n                                                  style={{ marginTop: \"10\" }}\r\n                                                ></div>\r\n                                                &nbsp;\r\n                                                {/*  <button\r\n                                                  onClick={onImageRemoveAll}\r\n                                                  className=\"btn green\"\r\n                                                  type=\"button\"\r\n                                                >\r\n                                                  Tüm Resimleri Sil\r\n                                                </button> */}\r\n                                                {imageList.map(\r\n                                                  (image, index) => (\r\n                                                    <div\r\n                                                      key={index}\r\n                                                      className=\"image-item\"\r\n                                                    >\r\n                                                      <img\r\n                                                        onClick={() => {\r\n                                                          setIsOpen(true);\r\n\r\n                                                          setPhotoIndex(index);\r\n                                                        }}\r\n                                                        src={image[\"data_url\"]}\r\n                                                        alt=\"\"\r\n                                                        width=\"100\"\r\n                                                      />\r\n                                                      <div className=\"image-item__btn-wrapper\">\r\n                                                        <button\r\n                                                          onClick={() =>\r\n                                                            onImageRemove(index)\r\n                                                          }\r\n                                                          className=\"btn green\"\r\n                                                          type=\"button\"\r\n                                                        >\r\n                                                          Sil\r\n                                                        </button>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  )\r\n                                                )}\r\n                                                {isOpen && (\r\n                                                  <Lightbox\r\n                                                    mainSrc={\r\n                                                      images[photoIndex]\r\n                                                        .data_url\r\n                                                    }\r\n                                                    nextSrc={\r\n                                                      images[\r\n                                                        (photoIndex + 1) %\r\n                                                          images.length\r\n                                                      ].data_url\r\n                                                    }\r\n                                                    prevSrc={\r\n                                                      images[\r\n                                                        (photoIndex +\r\n                                                          images.length -\r\n                                                          1) %\r\n                                                          images.length\r\n                                                      ].data_url\r\n                                                    }\r\n                                                    onCloseRequest={() =>\r\n                                                      setIsOpen(false)\r\n                                                    }\r\n                                                    onMovePrevRequest={() =>\r\n                                                      setPhotoIndex(\r\n                                                        (photoIndex +\r\n                                                          images.length -\r\n                                                          1) %\r\n                                                          images.length\r\n                                                      )\r\n                                                    }\r\n                                                    onMoveNextRequest={() =>\r\n                                                      setPhotoIndex(\r\n                                                        (photoIndex + 1) %\r\n                                                          images.length\r\n                                                      )\r\n                                                    }\r\n                                                  />\r\n                                                )}\r\n                                              </div>\r\n                                            )}\r\n                                          </ImageUploading>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>{\" \"}\r\n                                </div>\r\n                                <div className=\"form-actions\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col-md-offset-3 col-md-9\">\r\n                                      <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn green\"\r\n                                      >\r\n                                        Kaydet\r\n                                      </button>\r\n                                      <Link to=\"/\">\r\n                                        <button\r\n                                          type=\"button\"\r\n                                          className=\"btn default\"\r\n                                        >\r\n                                          İptal\r\n                                        </button>\r\n                                      </Link>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </form>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* \r\n              <a href=\"javascript:;\" className=\"page-quick-sidebar-toggler\">\r\n                <i className=\"icon-login\" />\r\n              </a>\r\n              <div\r\n                className=\"page-quick-sidebar-wrapper\"\r\n                data-close-on-body-click=\"false\"\r\n              ></div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nProjeEkle.propTypes = {\r\n  setProject: PropTypes.func.isRequired,\r\n  getSubCategoryWithCategory: PropTypes.func.isRequired,\r\n  getCategory: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  kategori: state.kategori,\r\n  altKategori: state.altKategori,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  setProject,\r\n  getCategory,\r\n  getSubCategoryWithCategory,\r\n})(ProjeEkle);\r\n","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Referanslar\\ReferansList.js",["206"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport {\r\n  getReference,\r\n  deleteReference,\r\n} from \"../../redux/actions/referenceActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport Spinner from \"../Spinner\";\r\nconst ReferanList = ({\r\n  getReference,\r\n  deleteReference,\r\n  referans: { ReferansList, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getReference();\r\n    \r\n  }, [ReferansList]);\r\n  const [photoIndex, setPhotoIndex] = useState(0);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onclickFunc = (aktifMi, id) => {\r\n    deleteReference({ aktifMi, id });\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"portlet box green\">\r\n        <div className=\"portlet-title\">\r\n          <div className=\"caption\">Referanslar</div>\r\n          <div class=\"tools\">\r\n            <Link style={{ color: \"white\" }} to=\"/ReferansEkle\">\r\n              Referans Ekle\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"portlet-body flip-scroll\">\r\n          <table className=\"table table-bordered table-striped table-condensed flip-content\">\r\n            <thead className=\"flip-content\">\r\n              <tr>\r\n                <th width=\"15%\"> Firma Adı </th>\r\n                <th width=\"15%\"> Resim </th>\r\n\r\n                <th> Düzenle </th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {loading ? (\r\n                <Spinner />\r\n              ) : (\r\n                ReferansList.map((ref, index) =>\r\n                  ref.aktifMi ? (\r\n                    <tr key={ref._id}>\r\n                      <td> {ref.firmaAdi} </td>\r\n                      <td>\r\n                        <img\r\n                          onClick={() => {\r\n                            setIsOpen(true);\r\n                            setPhotoIndex(index);\r\n                          }}\r\n                          className=\"img-preview-list\"\r\n                          src={ref.resim}\r\n                          alt=\"\"\r\n                          key={ref.resim}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={(e) => {\r\n                            onclickFunc(false, ref._id);\r\n                          }}\r\n                          className=\"btn green\"\r\n                        >\r\n                          Sil\r\n                        </button>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/ReferansGuncelle\",\r\n                            state: ref,\r\n                          }}\r\n                          className=\"btn green\"\r\n                        >\r\n                          Güncelle\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n          {isOpen && (\r\n            <Lightbox\r\n              mainSrc={ReferansList[photoIndex].resim}\r\n              nextSrc={ReferansList[(photoIndex + 1) % ReferansList.length]}\r\n              prevSrc={\r\n                ReferansList[\r\n                  (photoIndex + ReferansList.length - 1) % ReferansList.length\r\n                ]\r\n              }\r\n              onCloseRequest={() => setIsOpen(false)}\r\n              onMovePrevRequest={() => {\r\n               \r\n                setPhotoIndex(\r\n                  (photoIndex + ReferansList.length - 1) % ReferansList.length\r\n                );\r\n              }}\r\n              onMoveNextRequest={() =>\r\n                setPhotoIndex((photoIndex + 1) % ReferansList.length)\r\n              }\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nReferanList.propTypes = {\r\n  getReference: PropTypes.func.isRequired,\r\n  deleteReference: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  referans: state.referansReducer,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getReference, deleteReference })(\r\n  ReferanList\r\n);\r\n","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Referanslar\\ReferansEkle.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\actions\\authActions.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Referanslar\\ReferansGuncelle.js",["207","208"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateReference } from \"../../redux/actions/referenceActions\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nconst ReferansGuncelle = ({ location: { state }, updateReference }) => {\r\n  const [formData, setFormData] = useState({\r\n    firmaAdi: state == null ? \"\" : state.firmaAdi,\r\n  });\r\n  let history = useHistory();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const { firmaAdi } = formData;\r\n  const [copyImage, setCopyImage] = useState([]);\r\n  const [resim, setResim] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [photoIndex, setPhotoIndex] = useState(0);\r\n  const [hata, setHata] = useState(false);\r\n  useEffect(() => {\r\n    if (typeof state === \"undefined\") {\r\n      return history.push(\"/Referanslar\");\r\n    }\r\n  }, []);\r\n  const onChangeResim = (e) => {\r\n    if (selectedFiles.length > 0) {\r\n      e.target.files = null;\r\n      setSelectedFiles([]);\r\n    }\r\n    setHata(false);\r\n    setResim(e.target.files);\r\n    if (e.target.files) {\r\n      const filesArray = Array.from(e.target.files).map((file) =>\r\n        URL.createObjectURL(file)\r\n      );\r\n\r\n      setSelectedFiles((prevImages) => prevImages.concat(filesArray));\r\n      Array.from(e.target.files).map(\r\n        (file) => URL.revokeObjectURL(file) // avoid memory leak\r\n      );\r\n\r\n      if (copyImage.length === 0) {\r\n        setCopyImage(filesArray);\r\n      }\r\n    }\r\n  };\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n    if (e.target.files) {\r\n      const filesArray = Array.from(e.target.files).map((file) =>\r\n        URL.createObjectURL(file)\r\n      );\r\n\r\n      setSelectedFiles((prevImages) => prevImages.concat(filesArray));\r\n      Array.from(e.target.files).map(\r\n        (file) => URL.revokeObjectURL(file) // avoid memory leak\r\n      );\r\n    }\r\n  };\r\n  const renderPhotos = (source) => {\r\n    return source.map((photo) => {\r\n      return (\r\n        <img\r\n          onClick={() => setIsOpen(true)}\r\n          className=\"img-preview\"\r\n          src={photo}\r\n          alt=\"\"\r\n          key={photo}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let form_data = new FormData();\r\n    form_data.append(\"firmaAdi\", firmaAdi);\r\n    for (const key of Object.keys(resim)) {\r\n      form_data.append(\"resim\", resim[key]);\r\n    }\r\n    updateReference(form_data, state._id);\r\n    history.push(\"/Referanslar\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"page-wrapper\">\r\n        <div className=\"page-wrapper-row full-height\">\r\n          <div className=\"page-wrapper-middle\">\r\n            <div className=\"page-container\">\r\n              <div className=\"page-content-wrapper\">\r\n                <div className=\"page-content\">\r\n                  <div className=\"container\">\r\n                    <ul className=\"page-breadcrumb breadcrumb\">\r\n                      <li>\r\n                        <a href=\"index.html\">Anasayfa</a>\r\n                        <i className=\"fa fa-circle\" />\r\n                      </li>\r\n\r\n                      <li>\r\n                        <span>Referans Ekle</span>\r\n                      </li>\r\n                    </ul>\r\n                    <div className=\"page-content-inner\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            className=\"portlet light portlet-fit portlet-form \"\r\n                            id=\"form_wizard_1\"\r\n                          >\r\n                            <div className=\"portlet-body\">\r\n                              {/* BEGIN FORM*/}\r\n                              <form\r\n                                onSubmit={(e) => onSubmit(e)}\r\n                                className=\"form-horizontal\"\r\n                              >\r\n                                <div className=\"form-body\">\r\n                                  <h3 className=\"form-section\">\r\n                                    Referans Ekle\r\n                                  </h3>\r\n                                  <div className=\"form-group \">\r\n                                    <label\r\n                                      className=\"control-label col-md-3\"\r\n                                      htmlFor=\"inputSuccess\"\r\n                                    >\r\n                                      Firma Adı\r\n                                    </label>\r\n                                    <div className=\"col-md-4\">\r\n                                      <input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputSuccess\"\r\n                                        name=\"firmaAdi\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={firmaAdi}\r\n                                      />{\" \"}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"form-group\">\r\n                                    <label className=\"control-label col-md-3\">\r\n                                      Resim\r\n                                    </label>\r\n                                    <div className=\"col-md-3\">\r\n                                      <div\r\n                                        className=\"fileinput fileinput-new\"\r\n                                        data-provides=\"fileinput\"\r\n                                      >\r\n                                        <div className=\"input-group input-large\">\r\n                                          <span className=\"input-group-addon btn default btn-file\">\r\n                                            <input\r\n                                              onChange={(e) => {\r\n                                                onChangeResim(e);\r\n                                              }}\r\n                                              type=\"file\"\r\n                                              name=\"resim\"\r\n                                              required={hata ? true : false}\r\n                                            />{\" \"}\r\n                                          </span>\r\n                                        </div>\r\n                                        <div>\r\n                                          {\" \"}\r\n                                          {selectedFiles.length === 0 ? (\r\n                                            <img\r\n                                              onClick={() => setIsOpen(true)}\r\n                                              className=\"img-preview\"\r\n                                              src={\r\n                                                state == null ? \"\" : state.resim\r\n                                              }\r\n                                              alt=\"\"\r\n                                              key={\r\n                                                state == null ? \"\" : state.resim\r\n                                              }\r\n                                            />\r\n                                          ) : (\r\n                                            renderPhotos(selectedFiles)\r\n                                          )}\r\n                                        </div>\r\n\r\n                                        {isOpen && (\r\n                                          <Lightbox\r\n                                            mainSrc={\r\n                                              selectedFiles.length === 0\r\n                                                ? state.resim\r\n                                                : selectedFiles[photoIndex]\r\n                                            }\r\n                                            onCloseRequest={() =>\r\n                                              setIsOpen(false)\r\n                                            }\r\n                                          />\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>{\" \"}\r\n                                </div>\r\n                                <div className=\"form-actions\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col-md-offset-3 col-md-9\">\r\n                                      <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn green\"\r\n                                      >\r\n                                        Kaydet\r\n                                      </button>\r\n                                      <Link to=\"/Referanslar\">\r\n                                        <button\r\n                                          type=\"button\"\r\n                                          className=\"btn default\"\r\n                                        >\r\n                                          İptal\r\n                                        </button>\r\n                                      </Link>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </form>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/*    <a href=\"javascript:;\" className=\"page-quick-sidebar-toggler\">\r\n                <i className=\"icon-login\" />\r\n              </a>\r\n              <div\r\n                className=\"page-quick-sidebar-wrapper\"\r\n                data-close-on-body-click=\"false\"\r\n              ></div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nReferansGuncelle.propTypes = {\r\n  updateReference: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({});\r\nexport default connect(mapStateToProps, {\r\n  updateReference,\r\n})(ReferansGuncelle);\r\n","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\actions\\Types.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Slaytlar\\SlaytList.js",["209"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { getSlide, deleteSlide } from \"../../redux/actions/slideActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nconst SlaytList = ({ getSlide, deleteSlide, slayt: { slaytlar } }) => {\r\n  useEffect(() => {\r\n    getSlide();\r\n  }, [slaytlar]);\r\n  const onclickFunc = (aktifMi, id) => {\r\n    deleteSlide({ aktifMi, id });\r\n  };\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [photoIndex, setPhotoIndex] = useState(0);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"portlet box green\">\r\n        <div className=\"portlet-title\">\r\n          <div className=\"caption\">Slaytlar </div>\r\n          <div class=\"tools\">\r\n            <Link style={{ color: \"white\" }} to=\"/SlaytEkle\">\r\n              Slayt Ekle\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"portlet-body flip-scroll\">\r\n          <table className=\"table table-bordered table-striped table-condensed flip-content\">\r\n            <thead className=\"flip-content\">\r\n              <tr>\r\n                <th width=\"15%\"> Gösterilsin Mi </th>\r\n                <th width=\"75%\"> Resimler </th>\r\n\r\n                <th> Düzenle </th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {slaytlar.map((slayt, index) =>\r\n                slayt.aktifMi ? (\r\n                  <tr key={slayt._id}>\r\n                    <td>\r\n                      {\" \"}\r\n                      {slayt.anaSayfadaGosterilsinMi ? \"Evet\" : \"Hayır\"}{\" \"}\r\n                    </td>\r\n                    <td>\r\n                      <img\r\n                        onClick={() => {\r\n                          setIsOpen(true);\r\n                          setPhotoIndex(index);\r\n                        }}\r\n                        className=\"img-preview-list\"\r\n                        src={slayt.resim}\r\n                        alt=\"\"\r\n                        key={slayt.resim}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          onclickFunc(false, slayt._id);\r\n                        }}\r\n                        className=\"btn green\"\r\n                      >\r\n                        Sil\r\n                      </button>\r\n                      <Link\r\n                        to={{\r\n                          pathname: \"/SlaytGuncelle\",\r\n                          state: slayt,\r\n                        }}\r\n                        className=\"btn green\"\r\n                      >\r\n                        Güncelle\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  \"\"\r\n                )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n          {isOpen && (\r\n            <Lightbox\r\n              mainSrc={slaytlar[photoIndex].resim}\r\n              nextSrc={slaytlar[(photoIndex + 1) % slaytlar.length]}\r\n              prevSrc={\r\n                slaytlar[(photoIndex + slaytlar.length - 1) % slaytlar.length]\r\n              }\r\n              onCloseRequest={() => setIsOpen(false)}\r\n              onMovePrevRequest={() => {\r\n                setPhotoIndex(\r\n                  (photoIndex + slaytlar.length - 1) % slaytlar.length\r\n                );\r\n              }}\r\n              onMoveNextRequest={() =>\r\n                setPhotoIndex((photoIndex + 1) % slaytlar.length)\r\n              }\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nSlaytList.propTypes = {\r\n  getSlide: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  slayt: state.slaytReducer,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getSlide, deleteSlide })(SlaytList);\r\n","C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Slaytlar\\SlaytEkle.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\reducers\\index.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Spinner.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\actions\\subCategoryActions.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\actions\\categoryActions.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\actions\\slideActions.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\actions\\referenceActions.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\actions\\projectActions.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\reducers\\authReducer.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\reducers\\altKategoriReducers.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\reducers\\kategoriReducer.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\reducers\\slaytReducer.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\reducers\\projeReducer.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\redux\\reducers\\referansReducer.js",[],"C:\\Users\\Crest\\Desktop\\yapisal\\yapisal-muhendislik-admin\\src\\components\\Slaytlar\\SlaytGuncelle.js",["210","211"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateSlide } from \"../../redux/actions/slideActions\";\r\nimport { useHistory } from \"react-router\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst SlaytEkle = ({ location: { state }, updateSlide }) => {\r\n  const [formData, setFormData] = useState({\r\n    resim: [],\r\n  });\r\n  let history = useHistory();\r\n  const [anaSayfadaGosterilsinMi, setanaSayfadaGosterilsinMi] = useState(\r\n    state == null ? \"\" : state.anaSayfadaGosterilsinMi\r\n  );\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [photoIndex, setPhotoIndex] = useState(0);\r\n  const { resim } = formData;\r\n  useEffect(() => {\r\n    if (state == null) {\r\n      history.push(\"/Slaytlar\");\r\n    }\r\n  }, []);\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n      resim: e.target.files,\r\n    });\r\n    \r\n    if (e.target.files) {\r\n      const filesArray = Array.from(e.target.files).map((file) =>\r\n        URL.createObjectURL(file)\r\n      );\r\n\r\n      setSelectedFiles((prevImages) => prevImages.concat(filesArray));\r\n      Array.from(e.target.files).map(\r\n        (file) => URL.revokeObjectURL(file) // avoid memory leak\r\n      );\r\n    }\r\n  };\r\n  const renderPhotos = (source) => {\r\n    return source.map((photo) => {\r\n      return (\r\n        <img\r\n          onClick={() => setIsOpen(true)}\r\n          className=\"img-preview\"\r\n          src={photo}\r\n          alt=\"\"\r\n          key={photo}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n   \r\n    let form_data = new FormData();\r\n    form_data.append(\"anaSayfadaGosterilsinMi\", anaSayfadaGosterilsinMi);\r\n    for (const key of Object.keys(resim)) {\r\n      form_data.append(\"resim\", resim[key]);\r\n    }\r\n\r\n    updateSlide(form_data, state._id);\r\n    history.push(\"/Slaytlar\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"page-wrapper\">\r\n        <div className=\"page-wrapper-row full-height\">\r\n          <div className=\"page-wrapper-middle\">\r\n            <div className=\"page-container\">\r\n              <div className=\"page-content-wrapper\">\r\n                <div className=\"page-content\">\r\n                  <div className=\"container\">\r\n                    <ul className=\"page-breadcrumb breadcrumb\">\r\n                      <li>\r\n                        <a href=\"index.html\">Anasayfa</a>\r\n                        <i className=\"fa fa-circle\" />\r\n                      </li>\r\n\r\n                      <li>\r\n                        <span>Referans Ekle</span>\r\n                      </li>\r\n                    </ul>\r\n                    <div className=\"page-content-inner\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <div\r\n                            className=\"portlet light portlet-fit portlet-form \"\r\n                            id=\"form_wizard_1\"\r\n                          >\r\n                            <div className=\"portlet-body\">\r\n                              {/* BEGIN FORM*/}\r\n                              <form\r\n                                onSubmit={(e) => onSubmit(e)}\r\n                                className=\"form-horizontal\"\r\n                              >\r\n                                <div className=\"form-body\">\r\n                                  <h3 className=\"form-section\">\r\n                                    Referans Ekle\r\n                                  </h3>\r\n                                  <div className=\"form-group \">\r\n                                    <label\r\n                                      className=\"control-label col-md-3\"\r\n                                      htmlFor=\"inputSuccess\"\r\n                                    >\r\n                                      Gösterilsin Mi\r\n                                    </label>\r\n                                    <div className=\"col-md-4\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        id=\"inputSuccess\"\r\n                                        name=\"anaSayfadaGosterilsinMi\"\r\n                                        onChange={(e) =>\r\n                                          setanaSayfadaGosterilsinMi(\r\n                                            !anaSayfadaGosterilsinMi\r\n                                          )\r\n                                        }\r\n                                        checked={anaSayfadaGosterilsinMi}\r\n                                      />{\" \"}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"form-group\">\r\n                                    <label className=\"control-label col-md-3\">\r\n                                      Resim\r\n                                    </label>\r\n                                    <div className=\"col-md-3\">\r\n                                      <div\r\n                                        className=\"fileinput fileinput-new\"\r\n                                        data-provides=\"fileinput\"\r\n                                      >\r\n                                        <div className=\"input-group input-large\">\r\n                                          <span className=\"input-group-addon btn default btn-file\">\r\n                                            <input\r\n                                              onChange={(e) => onChange(e)}\r\n                                              type=\"file\"\r\n                                              multiple\r\n                                              name=\"resim\"\r\n                                            />{\" \"}\r\n                                          </span>\r\n                                        </div>\r\n                                        <div>\r\n                                          {\" \"}\r\n                                          {selectedFiles.length === 0 ? (\r\n                                            <img\r\n                                              onClick={() => setIsOpen(true)}\r\n                                              className=\"img-preview\"\r\n                                              src={\r\n                                                state == null ? \"\" : state.resim\r\n                                              }\r\n                                              alt=\"\"\r\n                                              key={\r\n                                                state == null ? \"\" : state.resim\r\n                                              }\r\n                                            />\r\n                                          ) : (\r\n                                            renderPhotos(selectedFiles)\r\n                                          )}\r\n                                        </div>\r\n                                        {isOpen && (\r\n                                          <Lightbox\r\n                                            mainSrc={\r\n                                              selectedFiles.length === 0\r\n                                                ? state.resim\r\n                                                : selectedFiles[photoIndex]\r\n                                            }\r\n                                            onCloseRequest={() =>\r\n                                              setIsOpen(false)\r\n                                            }\r\n                                          />\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>{\" \"}\r\n                                </div>\r\n                                <div className=\"form-actions\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col-md-offset-3 col-md-9\">\r\n                                      <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn green\"\r\n                                      >\r\n                                        Kaydet\r\n                                      </button>\r\n                                      <Link to=\"/Slaytlar\">\r\n                                        <button\r\n                                          type=\"button\"\r\n                                          className=\"btn default\"\r\n                                        >\r\n                                          İptal\r\n                                        </button>\r\n                                      </Link>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </form>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/*   <a href=\"javascript:;\" className=\"page-quick-sidebar-toggler\">\r\n                <i className=\"icon-login\" />\r\n              </a>\r\n              <div\r\n                className=\"page-quick-sidebar-wrapper\"\r\n                data-close-on-body-click=\"false\"\r\n              ></div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nSlaytEkle.propTypes = {\r\n  updateSlide: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({});\r\nexport default connect(mapStateToProps, {\r\n  updateSlide,\r\n})(SlaytEkle);\r\n",{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":12,"column":8,"nodeType":"218","messageId":"219","endLine":12,"endColumn":14},{"ruleId":"216","severity":1,"message":"220","line":32,"column":8,"nodeType":"218","messageId":"219","endLine":32,"endColumn":16},{"ruleId":"221","severity":1,"message":"222","line":54,"column":6,"nodeType":"223","endLine":54,"endColumn":8,"suggestions":"224"},{"ruleId":"216","severity":1,"message":"225","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"226","severity":1,"message":"227","line":28,"column":15,"nodeType":"228","endLine":28,"endColumn":65},{"ruleId":"229","severity":1,"message":"230","line":28,"column":15,"nodeType":"228","endLine":28,"endColumn":65},{"ruleId":"231","severity":1,"message":"232","line":28,"column":23,"nodeType":"233","messageId":"234","endLine":28,"endColumn":37},{"ruleId":"235","severity":1,"message":"236","line":49,"column":19,"nodeType":"228","endLine":52,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":59,"column":19,"nodeType":"228","endLine":62,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":69,"column":19,"nodeType":"228","endLine":72,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":79,"column":19,"nodeType":"228","endLine":82,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":88,"column":19,"nodeType":"228","endLine":91,"endColumn":20},{"ruleId":"221","severity":1,"message":"237","line":17,"column":6,"nodeType":"223","endLine":17,"endColumn":22,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":47,"column":18,"nodeType":"241","endLine":47,"endColumn":33},{"ruleId":"239","severity":1,"message":"240","line":54,"column":17,"nodeType":"241","endLine":54,"endColumn":32},{"ruleId":"221","severity":1,"message":"242","line":22,"column":6,"nodeType":"223","endLine":22,"endColumn":19,"suggestions":"243"},{"ruleId":"221","severity":1,"message":"244","line":25,"column":6,"nodeType":"223","endLine":25,"endColumn":8,"suggestions":"245"},{"ruleId":"221","severity":1,"message":"246","line":32,"column":6,"nodeType":"223","endLine":32,"endColumn":8,"suggestions":"247"},{"ruleId":"221","severity":1,"message":"242","line":23,"column":6,"nodeType":"223","endLine":23,"endColumn":19,"suggestions":"248"},{"ruleId":"216","severity":1,"message":"225","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"249","line":22,"column":6,"nodeType":"223","endLine":22,"endColumn":16,"suggestions":"250"},{"ruleId":"216","severity":1,"message":"251","line":23,"column":10,"nodeType":"218","messageId":"219","endLine":23,"endColumn":23},{"ruleId":"221","severity":1,"message":"252","line":67,"column":6,"nodeType":"223","endLine":67,"endColumn":8,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":331,"column":77,"nodeType":"256","messageId":"257","endLine":331,"endColumn":79},{"ruleId":"229","severity":1,"message":"230","line":551,"column":15,"nodeType":"228","endLine":551,"endColumn":77},{"ruleId":"231","severity":1,"message":"232","line":551,"column":23,"nodeType":"233","messageId":"234","endLine":551,"endColumn":37},{"ruleId":"216","severity":1,"message":"258","line":10,"column":8,"nodeType":"218","messageId":"219","endLine":10,"endColumn":15},{"ruleId":"216","severity":1,"message":"259","line":21,"column":10,"nodeType":"218","messageId":"219","endLine":21,"endColumn":33},{"ruleId":"221","severity":1,"message":"242","line":49,"column":6,"nodeType":"223","endLine":49,"endColumn":47,"suggestions":"260"},{"ruleId":"221","severity":1,"message":"261","line":20,"column":6,"nodeType":"223","endLine":20,"endColumn":20,"suggestions":"262"},{"ruleId":"216","severity":1,"message":"263","line":19,"column":22,"nodeType":"218","messageId":"219","endLine":19,"endColumn":35},{"ruleId":"221","severity":1,"message":"244","line":25,"column":6,"nodeType":"223","endLine":25,"endColumn":8,"suggestions":"264"},{"ruleId":"221","severity":1,"message":"265","line":11,"column":6,"nodeType":"223","endLine":11,"endColumn":16,"suggestions":"266"},{"ruleId":"216","severity":1,"message":"263","line":19,"column":22,"nodeType":"218","messageId":"219","endLine":19,"endColumn":35},{"ruleId":"221","severity":1,"message":"244","line":25,"column":6,"nodeType":"223","endLine":25,"endColumn":8,"suggestions":"267"},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'NotFound' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["270"],"'useEffect' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","React Hook useEffect has a missing dependency: 'getSubCategory'. Either include it or remove the dependency array. If 'getSubCategory' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["271"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has a missing dependency: 'getCategory'. Either include it or remove the dependency array. If 'getCategory' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["272"],"React Hook useEffect has missing dependencies: 'history' and 'state'. Either include them or remove the dependency array.",["273"],"React Hook useEffect has missing dependencies: 'getCategory', 'history', and 'state'. Either include them or remove the dependency array. If 'getCategory' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["274"],["275"],"React Hook useEffect has missing dependencies: 'getProject' and 'isAuthenticated'. Either include them or remove the dependency array. If 'getProject' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["276"],"'kategoriIndex' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'subCategoryWithCategory', 'getSubCategoryWithCategory', 'getCategory', 'history', and 'state'. Either include them or remove the dependency array. If 'getCategory' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["277"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Spinner' is defined but never used.","'secilenAltKategoriIndex' is assigned a value but never used.",["278"],"React Hook useEffect has missing dependencies: 'getReference' and 'loading'. Either include them or remove the dependency array. If 'getReference' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["279"],"'setPhotoIndex' is assigned a value but never used.",["280"],"React Hook useEffect has a missing dependency: 'getSlide'. Either include it or remove the dependency array. If 'getSlide' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["281"],["282"],"no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"287","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"289","fix":"302"},{"desc":"303","fix":"304"},{"desc":"289","fix":"305"},"Update the dependencies array to be: [isAuthenticated]",{"range":"306","text":"307"},"Update the dependencies array to be: [altKategoriler, getSubCategory]",{"range":"308","text":"309"},"Update the dependencies array to be: [getCategory, kategoriler]",{"range":"310","text":"311"},"Update the dependencies array to be: [history, state]",{"range":"312","text":"313"},"Update the dependencies array to be: [getCategory, history, state]",{"range":"314","text":"315"},{"range":"316","text":"311"},"Update the dependencies array to be: [getProject, isAuthenticated, projeler]",{"range":"317","text":"318"},"Update the dependencies array to be: [subCategoryWithCategory, getSubCategoryWithCategory, getCategory, history, state]",{"range":"319","text":"320"},"Update the dependencies array to be: [kategoriler, subCategoryWithCategory, getCategory]",{"range":"321","text":"322"},"Update the dependencies array to be: [ReferansList, getReference, loading]",{"range":"323","text":"324"},{"range":"325","text":"313"},"Update the dependencies array to be: [getSlide, slaytlar]",{"range":"326","text":"327"},{"range":"328","text":"313"},[2354,2356],"[isAuthenticated]",[480,496],"[altKategoriler, getSubCategory]",[707,720],"[getCategory, kategoriler]",[770,772],"[history, state]",[1048,1050],"[getCategory, history, state]",[625,638],[603,613],"[getProject, isAuthenticated, projeler]",[2241,2243],"[subCategoryWithCategory, getSubCategoryWithCategory, getCategory, history, state]",[1617,1658],"[kategoriler, subCategoryWithCategory, getCategory]",[578,592],"[ReferansList, getReference, loading]",[1027,1029],[461,471],"[getSlide, slaytlar]",[946,948]]